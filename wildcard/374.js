"use strict";(self.webpackChunk_micro_snake_plugin_wildcard=self.webpackChunk_micro_snake_plugin_wildcard||[]).push([[374],{374:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n;// CONCATENATED MODULE: ../store/src/gameConstants.ts\nconst CONSTANTS = {\n    gridSize: 20,\n    tileSizeMultiplier: 0.9,\n    get tileSize() {\n        return this.gridSize * this.tileSizeMultiplier;\n    },\n    get canvasSize() {\n        return this.gridSize * this.gridSize;\n    },\n    get startPosition() {\n        return { x: this.gridSize / 2, y: this.gridSize / 2 };\n    },\n    startFps: 6,\n    startTailSize: 5\n};\nconst velocityByKeyCode = {\n    // these should really account for the tileSize\n    37: { x: -1, y: 0 },\n    38: { x: 0, y: -1 },\n    39: { x: 1, y: 0 },\n    40: { x: 0, y: 1 }\n};\n\n// EXTERNAL MODULE: consume shared module (default) mobx@^6.3.13 (singleton) (fallback: ../../node_modules/mobx/dist/mobx.esm.js)\nvar mobx_esm_js_ = __webpack_require__(217);\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ../../node_modules/react/index.js)\nvar index_js_ = __webpack_require__(927);\nvar index_js_default = /*#__PURE__*/__webpack_require__.n(index_js_);\n;// CONCATENATED MODULE: ../store/src/gameStore.ts\n\n\n\n// without configuring enforceActions it would be possible to modify any observable from anywhere\n(0,mobx_esm_js_.configure)({ enforceActions: 'observed' });\n// base class\nclass GameStore {\n    constructor() {\n        this.gridSize = CONSTANTS.gridSize;\n        // initial game state, player is centered with no velocity\n        this.playerPosition = CONSTANTS.startPosition;\n        this.velocity = {\n            x: 0,\n            y: 0\n        };\n        this.trail = [CONSTANTS.startPosition];\n        this.tailSize = CONSTANTS.startTailSize;\n        // housekeeping to control animation\n        this.running = false;\n        // use to control fps and therefore game speed\n        this.lastFrameTime = Date.now();\n        this.fps = CONSTANTS.startFps;\n        this.suspendGame = (0,mobx_esm_js_.action)(() => {\n            this.running = false;\n        });\n        this.startGame = () => {\n            this.running = true;\n            this.tick();\n        };\n        this.tick = () => {\n            // render loop control\n            if (this.running) {\n                requestAnimationFrame(() => this.tick());\n                const now = Date.now();\n                const elapsed = now - this.lastFrameTime;\n                // render speed control\n                if (elapsed > this.frameInterval) {\n                    this.lastFrameTime = now - (elapsed % this.frameInterval);\n                    this.updatePlayerPosition(this.playerPosition, this.velocity);\n                }\n            }\n        };\n        this.updatePlayerPosition = (0,mobx_esm_js_.action)(({ x: px, y: py }, { x: vx, y: vy }) => {\n            if (vx || vy) {\n                const newPlayerPosition = {\n                    x: px + vx,\n                    y: py + vy\n                };\n                if (newPlayerPosition.x < 0) {\n                    newPlayerPosition.x = this.gridSize - 1;\n                }\n                if (newPlayerPosition.x > this.gridSize - 1) {\n                    newPlayerPosition.x = 0;\n                }\n                if (newPlayerPosition.y < 0) {\n                    newPlayerPosition.y = this.gridSize - 1;\n                }\n                if (newPlayerPosition.y > this.gridSize - 1) {\n                    newPlayerPosition.y = 0;\n                }\n                this.playerPosition = newPlayerPosition;\n                this.trail = this.trail.concat(newPlayerPosition).slice(-this.tailSize);\n            }\n        });\n        this.setVelocity = (0,mobx_esm_js_.action)((newVelocity) => {\n            this.velocity = newVelocity;\n        });\n        this.setTailSize = (0,mobx_esm_js_.action)((tailSize) => {\n            this.tailSize = tailSize;\n        });\n        this.setFPS = (0,mobx_esm_js_.action)((fps) => {\n            this.fps = fps;\n        });\n        this.setPlayerPosition = (0,mobx_esm_js_.action)((newPlayerPosition) => {\n            this.playerPosition = newPlayerPosition;\n        });\n        this.getRandomPosition = () => ({\n            x: Math.floor(Math.random() * this.gridSize),\n            y: Math.floor(Math.random() * this.gridSize)\n        });\n        (0,mobx_esm_js_.makeObservable)(this, {\n            playerPosition: mobx_esm_js_.observable,\n            trail: mobx_esm_js_.observable,\n            tailSize: mobx_esm_js_.observable,\n            frameInterval: mobx_esm_js_.computed,\n            score: mobx_esm_js_.computed,\n            running: mobx_esm_js_.observable\n        });\n        // setup lazy observables\n        (0,mobx_esm_js_.onBecomeObserved)(this, 'playerPosition', this.startGame);\n        (0,mobx_esm_js_.onBecomeUnobserved)(this, 'playerPosition', this.suspendGame);\n    }\n    get frameInterval() {\n        return 1000 / this.fps;\n    }\n    get score() {\n        return this.tailSize - CONSTANTS.startTailSize;\n    }\n}\n// all references should point to this singleton.\n// If store is accessed outside of useContext (e.g. outside of React) you need to use this instance (unless you want multiple stores)!\nconst GameStoreInstance = new GameStore();\nconst GameStoreContext = (0,index_js_.createContext)(GameStoreInstance);\n\n;// CONCATENATED MODULE: ../store/src/lazyPluginProvider.tsx\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\nconst lazyPluginProvider_LazyPluginProvider = (_a) => {\n    var { Plugin, asyncLoad } = _a, rest = __rest(_a, [\"Plugin\", \"asyncLoad\"]);\n    const [gameStore, setGameStore] = index_js_default().useState(null);\n    index_js_default().useEffect(() => {\n        asyncLoad().then((module) => setGameStore(module.GameStoreInstance));\n    }, []);\n    return gameStore ? index_js_default().createElement(Plugin, Object.assign({ gameStore: gameStore }, rest)) : null;\n};\n\n;// CONCATENATED MODULE: ../store/src/index.ts\n\n\n\n\n;// CONCATENATED MODULE: ../store/index.ts\n\n\n// EXTERNAL MODULE: ../../node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(316);\n// EXTERNAL MODULE: consume shared module (default) react-konva@^17.0.2-5 (singleton) (fallback: ../../node_modules/react-konva/es/ReactKonva.js)\nvar ReactKonva_js_ = __webpack_require__(641);\n// EXTERNAL MODULE: consume shared module (default) mobx-react@^7.2.1 (singleton) (fallback: ../../node_modules/mobx-react/dist/mobxreact.esm.js)\nvar mobxreact_esm_js_ = __webpack_require__(189);\n;// CONCATENATED MODULE: ./app.tsx\n\n\n\n\nconst REDUCTION_AMOUNT = 2;\nconst REDUCTION_LENGTH = 5000;\nconst Teleport = (0,mobxreact_esm_js_.observer)(function ({ gameStore }) {\n    const { playerPosition, setFPS, getRandomPosition, setPlayerPosition } = gameStore;\n    const [teleportPosition, setPlumPosition] = index_js_default().useState(getRandomPosition());\n    index_js_default().useEffect(() => {\n        if (teleportPosition.x === playerPosition.x &&\n            teleportPosition.y === playerPosition.y) {\n            // move the teleport\n            setPlumPosition(getRandomPosition);\n            // teleport the player\n            setPlayerPosition(getRandomPosition());\n            // temporarily decrease speed for better survival odds\n            setFPS(gameStore.fps - REDUCTION_AMOUNT);\n            // eventually remove the speed buff\n            setTimeout(() => setFPS(gameStore.fps + REDUCTION_AMOUNT), REDUCTION_LENGTH);\n        }\n    }, [teleportPosition, playerPosition]);\n    const starSize = CONSTANTS.tileSize / 2;\n    return (index_js_default().createElement(ReactKonva_js_.Layer, null, index_js_default().createElement(ReactKonva_js_.Star, { innerRadius: starSize, numPoints: 5, outerRadius: starSize, offset: { x: -starSize, y: -starSize }, stroke: 'orange', width: starSize, height: starSize, x: teleportPosition.x * CONSTANTS.gridSize, y: teleportPosition.y * CONSTANTS.gridSize })));\n});\n\n/* harmony default export */ const app = (() => React.createElement(LazyPluginProvider, { Plugin: Teleport, asyncLoad: () => __webpack_require__.e(/* import() */ 700).then(__webpack_require__.t.bind(__webpack_require__, 700, 23)) }));\n\n;// CONCATENATED MODULE: ./bootstrap.tsx\n\n\n\n\n\nreact_dom.render(index_js_default().createElement(ReactKonva_js_.Stage, { width: CONSTANTS.canvasSize, height: CONSTANTS.canvasSize },\n    index_js_default().createElement(lazyPluginProvider_LazyPluginProvider, { Plugin: Teleport, asyncLoad: () => __webpack_require__.e(/* import() */ 700).then(__webpack_require__.t.bind(__webpack_require__, 700, 23)) })), document.getElementById('root'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///374\n")}}]);