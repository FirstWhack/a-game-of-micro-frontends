"use strict";(self.webpackChunk_micro_snake_engine=self.webpackChunk_micro_snake_engine||[]).push([[791],{791:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"GameStore\": () => (/* binding */ GameStore),\n  \"GameStoreContext\": () => (/* binding */ GameStoreContext),\n  \"GameStoreInstance\": () => (/* binding */ GameStoreInstance)\n});\n\n// EXTERNAL MODULE: consume shared module (default) mobx@=6.3.13 (strict) (fallback: ../../node_modules/mobx/dist/mobx.esm.js) (eager)\nvar mobx_esm_js_eager_ = __webpack_require__(284);\n// EXTERNAL MODULE: consume shared module (default) react@^17.0.2 (singleton) (fallback: ../../node_modules/react/index.js) (eager)\nvar index_js_eager_ = __webpack_require__(691);\n;// CONCATENATED MODULE: ./src/gameConstants.ts\nconst CONSTANTS = {\n    gridSize: 20,\n    tileSizeMultiplier: 0.9,\n    get tileSize() {\n        return this.gridSize * this.tileSizeMultiplier;\n    },\n    get canvasSize() {\n        return this.gridSize * this.gridSize;\n    },\n    get startPosition() {\n        return { x: this.gridSize / 2, y: this.gridSize / 2 };\n    },\n    startFps: 6,\n    startTailSize: 5\n};\nconst velocityByKeyCode = {\n    // these should really account for the tileSize\n    37: { x: -1, y: 0 },\n    38: { x: 0, y: -1 },\n    39: { x: 1, y: 0 },\n    40: { x: 0, y: 1 }\n};\n\n;// CONCATENATED MODULE: ./src/gameStore.ts\n\n\n\n// without configuring enforceActions it would be possible to modify any observable from anywhere\n(0,mobx_esm_js_eager_.configure)({ enforceActions: 'observed' });\n// base class\nclass GameStore {\n    constructor() {\n        this.gridSize = CONSTANTS.gridSize;\n        // initial game state, player is centered with no velocity\n        this.playerPosition = CONSTANTS.startPosition;\n        this.velocity = {\n            x: 0,\n            y: 0\n        };\n        this.trail = [CONSTANTS.startPosition];\n        this.tailSize = CONSTANTS.startTailSize;\n        // housekeeping to control animation\n        this.running = false;\n        // use to control fps and therefore game speed\n        this.lastFrameTime = Date.now();\n        this.fps = CONSTANTS.startFps;\n        this.suspendGame = (0,mobx_esm_js_eager_.action)(() => {\n            this.running = false;\n        });\n        this.startGame = () => {\n            this.running = true;\n            this.tick();\n        };\n        this.tick = () => {\n            // render loop control\n            if (this.running) {\n                requestAnimationFrame(() => this.tick());\n                const now = Date.now();\n                const elapsed = now - this.lastFrameTime;\n                // render speed control\n                if (elapsed > this.frameInterval) {\n                    this.lastFrameTime = now - (elapsed % this.frameInterval);\n                    this.updatePlayerPosition(this.playerPosition, this.velocity);\n                }\n            }\n        };\n        this.updatePlayerPosition = (0,mobx_esm_js_eager_.action)(({ x: px, y: py }, { x: vx, y: vy }) => {\n            if (vx || vy) {\n                const newPlayerPosition = {\n                    x: px + vx,\n                    y: py + vy\n                };\n                if (newPlayerPosition.x < 0) {\n                    newPlayerPosition.x = this.gridSize - 1;\n                }\n                if (newPlayerPosition.x > this.gridSize - 1) {\n                    newPlayerPosition.x = 0;\n                }\n                if (newPlayerPosition.y < 0) {\n                    newPlayerPosition.y = this.gridSize - 1;\n                }\n                if (newPlayerPosition.y > this.gridSize - 1) {\n                    newPlayerPosition.y = 0;\n                }\n                this.playerPosition = newPlayerPosition;\n                this.trail = this.trail.concat(newPlayerPosition).slice(-this.tailSize);\n            }\n        });\n        this.setVelocity = (0,mobx_esm_js_eager_.action)((newVelocity) => {\n            this.velocity = newVelocity;\n        });\n        this.setTailSize = (0,mobx_esm_js_eager_.action)((tailSize) => {\n            this.tailSize = tailSize;\n        });\n        this.setFPS = (0,mobx_esm_js_eager_.action)((fps) => {\n            this.fps = fps;\n        });\n        this.setPlayerPosition = (0,mobx_esm_js_eager_.action)((newPlayerPosition) => {\n            this.playerPosition = newPlayerPosition;\n        });\n        this.getRandomPosition = () => ({\n            x: Math.floor(Math.random() * this.gridSize),\n            y: Math.floor(Math.random() * this.gridSize)\n        });\n        (0,mobx_esm_js_eager_.makeObservable)(this, {\n            playerPosition: mobx_esm_js_eager_.observable,\n            trail: mobx_esm_js_eager_.observable,\n            tailSize: mobx_esm_js_eager_.observable,\n            frameInterval: mobx_esm_js_eager_.computed,\n            score: mobx_esm_js_eager_.computed,\n            running: mobx_esm_js_eager_.observable\n        });\n        // setup lazy observables\n        (0,mobx_esm_js_eager_.onBecomeObserved)(this, 'playerPosition', this.startGame);\n        (0,mobx_esm_js_eager_.onBecomeUnobserved)(this, 'playerPosition', this.suspendGame);\n    }\n    get frameInterval() {\n        return 1000 / this.fps;\n    }\n    get score() {\n        return this.tailSize - CONSTANTS.startTailSize;\n    }\n}\n// all references should point to this singleton.\n// If store is accessed outside of useContext (e.g. outside of React) you need to use this instance (unless you want multiple stores)!\nconst GameStoreInstance = new GameStore();\nconst GameStoreContext = (0,index_js_eager_.createContext)(GameStoreInstance);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkxLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWljcm8tc25ha2UvZW5naW5lLy4vc3JjL2dhbWVDb25zdGFudHMudHM/OTEyYyIsIndlYnBhY2s6Ly9AbWljcm8tc25ha2UvZW5naW5lLy4vc3JjL2dhbWVTdG9yZS50cz9hMGY5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBDT05TVEFOVFMgPSB7XG4gICAgZ3JpZFNpemU6IDIwLFxuICAgIHRpbGVTaXplTXVsdGlwbGllcjogMC45LFxuICAgIGdldCB0aWxlU2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JpZFNpemUgKiB0aGlzLnRpbGVTaXplTXVsdGlwbGllcjtcbiAgICB9LFxuICAgIGdldCBjYW52YXNTaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ncmlkU2l6ZSAqIHRoaXMuZ3JpZFNpemU7XG4gICAgfSxcbiAgICBnZXQgc3RhcnRQb3NpdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHsgeDogdGhpcy5ncmlkU2l6ZSAvIDIsIHk6IHRoaXMuZ3JpZFNpemUgLyAyIH07XG4gICAgfSxcbiAgICBzdGFydEZwczogNixcbiAgICBzdGFydFRhaWxTaXplOiA1XG59O1xuZXhwb3J0IGNvbnN0IHZlbG9jaXR5QnlLZXlDb2RlID0ge1xuICAgIC8vIHRoZXNlIHNob3VsZCByZWFsbHkgYWNjb3VudCBmb3IgdGhlIHRpbGVTaXplXG4gICAgMzc6IHsgeDogLTEsIHk6IDAgfSxcbiAgICAzODogeyB4OiAwLCB5OiAtMSB9LFxuICAgIDM5OiB7IHg6IDEsIHk6IDAgfSxcbiAgICA0MDogeyB4OiAwLCB5OiAxIH1cbn07XG4iLCJpbXBvcnQgeyBhY3Rpb24sIGNvbXB1dGVkLCBjb25maWd1cmUsIG1ha2VPYnNlcnZhYmxlLCBvYnNlcnZhYmxlLCBvbkJlY29tZU9ic2VydmVkLCBvbkJlY29tZVVub2JzZXJ2ZWQgfSBmcm9tICdtb2J4JztcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDT05TVEFOVFMgfSBmcm9tICcuL2dhbWVDb25zdGFudHMnO1xuLy8gd2l0aG91dCBjb25maWd1cmluZyBlbmZvcmNlQWN0aW9ucyBpdCB3b3VsZCBiZSBwb3NzaWJsZSB0byBtb2RpZnkgYW55IG9ic2VydmFibGUgZnJvbSBhbnl3aGVyZVxuY29uZmlndXJlKHsgZW5mb3JjZUFjdGlvbnM6ICdvYnNlcnZlZCcgfSk7XG4vLyBiYXNlIGNsYXNzXG5leHBvcnQgY2xhc3MgR2FtZVN0b3JlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5ncmlkU2l6ZSA9IENPTlNUQU5UUy5ncmlkU2l6ZTtcbiAgICAgICAgLy8gaW5pdGlhbCBnYW1lIHN0YXRlLCBwbGF5ZXIgaXMgY2VudGVyZWQgd2l0aCBubyB2ZWxvY2l0eVxuICAgICAgICB0aGlzLnBsYXllclBvc2l0aW9uID0gQ09OU1RBTlRTLnN0YXJ0UG9zaXRpb247XG4gICAgICAgIHRoaXMudmVsb2NpdHkgPSB7XG4gICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgeTogMFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnRyYWlsID0gW0NPTlNUQU5UUy5zdGFydFBvc2l0aW9uXTtcbiAgICAgICAgdGhpcy50YWlsU2l6ZSA9IENPTlNUQU5UUy5zdGFydFRhaWxTaXplO1xuICAgICAgICAvLyBob3VzZWtlZXBpbmcgdG8gY29udHJvbCBhbmltYXRpb25cbiAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgICAgIC8vIHVzZSB0byBjb250cm9sIGZwcyBhbmQgdGhlcmVmb3JlIGdhbWUgc3BlZWRcbiAgICAgICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdGhpcy5mcHMgPSBDT05TVEFOVFMuc3RhcnRGcHM7XG4gICAgICAgIHRoaXMuc3VzcGVuZEdhbWUgPSBhY3Rpb24oKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnN0YXJ0R2FtZSA9ICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucnVubmluZyA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnRpY2soKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy50aWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgLy8gcmVuZGVyIGxvb3AgY29udHJvbFxuICAgICAgICAgICAgaWYgKHRoaXMucnVubmluZykge1xuICAgICAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLnRpY2soKSk7XG4gICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbGFwc2VkID0gbm93IC0gdGhpcy5sYXN0RnJhbWVUaW1lO1xuICAgICAgICAgICAgICAgIC8vIHJlbmRlciBzcGVlZCBjb250cm9sXG4gICAgICAgICAgICAgICAgaWYgKGVsYXBzZWQgPiB0aGlzLmZyYW1lSW50ZXJ2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gbm93IC0gKGVsYXBzZWQgJSB0aGlzLmZyYW1lSW50ZXJ2YWwpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVBsYXllclBvc2l0aW9uKHRoaXMucGxheWVyUG9zaXRpb24sIHRoaXMudmVsb2NpdHkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy51cGRhdGVQbGF5ZXJQb3NpdGlvbiA9IGFjdGlvbigoeyB4OiBweCwgeTogcHkgfSwgeyB4OiB2eCwgeTogdnkgfSkgPT4ge1xuICAgICAgICAgICAgaWYgKHZ4IHx8IHZ5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3UGxheWVyUG9zaXRpb24gPSB7XG4gICAgICAgICAgICAgICAgICAgIHg6IHB4ICsgdngsXG4gICAgICAgICAgICAgICAgICAgIHk6IHB5ICsgdnlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmIChuZXdQbGF5ZXJQb3NpdGlvbi54IDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBuZXdQbGF5ZXJQb3NpdGlvbi54ID0gdGhpcy5ncmlkU2l6ZSAtIDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChuZXdQbGF5ZXJQb3NpdGlvbi54ID4gdGhpcy5ncmlkU2l6ZSAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3UGxheWVyUG9zaXRpb24ueCA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChuZXdQbGF5ZXJQb3NpdGlvbi55IDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBuZXdQbGF5ZXJQb3NpdGlvbi55ID0gdGhpcy5ncmlkU2l6ZSAtIDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChuZXdQbGF5ZXJQb3NpdGlvbi55ID4gdGhpcy5ncmlkU2l6ZSAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3UGxheWVyUG9zaXRpb24ueSA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyUG9zaXRpb24gPSBuZXdQbGF5ZXJQb3NpdGlvbjtcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWlsID0gdGhpcy50cmFpbC5jb25jYXQobmV3UGxheWVyUG9zaXRpb24pLnNsaWNlKC10aGlzLnRhaWxTaXplKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2V0VmVsb2NpdHkgPSBhY3Rpb24oKG5ld1ZlbG9jaXR5KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnZlbG9jaXR5ID0gbmV3VmVsb2NpdHk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNldFRhaWxTaXplID0gYWN0aW9uKCh0YWlsU2l6ZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy50YWlsU2l6ZSA9IHRhaWxTaXplO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZXRGUFMgPSBhY3Rpb24oKGZwcykgPT4ge1xuICAgICAgICAgICAgdGhpcy5mcHMgPSBmcHM7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNldFBsYXllclBvc2l0aW9uID0gYWN0aW9uKChuZXdQbGF5ZXJQb3NpdGlvbikgPT4ge1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJQb3NpdGlvbiA9IG5ld1BsYXllclBvc2l0aW9uO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5nZXRSYW5kb21Qb3NpdGlvbiA9ICgpID0+ICh7XG4gICAgICAgICAgICB4OiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLmdyaWRTaXplKSxcbiAgICAgICAgICAgIHk6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuZ3JpZFNpemUpXG4gICAgICAgIH0pO1xuICAgICAgICBtYWtlT2JzZXJ2YWJsZSh0aGlzLCB7XG4gICAgICAgICAgICBwbGF5ZXJQb3NpdGlvbjogb2JzZXJ2YWJsZSxcbiAgICAgICAgICAgIHRyYWlsOiBvYnNlcnZhYmxlLFxuICAgICAgICAgICAgdGFpbFNpemU6IG9ic2VydmFibGUsXG4gICAgICAgICAgICBmcmFtZUludGVydmFsOiBjb21wdXRlZCxcbiAgICAgICAgICAgIHNjb3JlOiBjb21wdXRlZCxcbiAgICAgICAgICAgIHJ1bm5pbmc6IG9ic2VydmFibGVcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHNldHVwIGxhenkgb2JzZXJ2YWJsZXNcbiAgICAgICAgb25CZWNvbWVPYnNlcnZlZCh0aGlzLCAncGxheWVyUG9zaXRpb24nLCB0aGlzLnN0YXJ0R2FtZSk7XG4gICAgICAgIG9uQmVjb21lVW5vYnNlcnZlZCh0aGlzLCAncGxheWVyUG9zaXRpb24nLCB0aGlzLnN1c3BlbmRHYW1lKTtcbiAgICB9XG4gICAgZ2V0IGZyYW1lSW50ZXJ2YWwoKSB7XG4gICAgICAgIHJldHVybiAxMDAwIC8gdGhpcy5mcHM7XG4gICAgfVxuICAgIGdldCBzY29yZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFpbFNpemUgLSBDT05TVEFOVFMuc3RhcnRUYWlsU2l6ZTtcbiAgICB9XG59XG4vLyBhbGwgcmVmZXJlbmNlcyBzaG91bGQgcG9pbnQgdG8gdGhpcyBzaW5nbGV0b24uXG4vLyBJZiBzdG9yZSBpcyBhY2Nlc3NlZCBvdXRzaWRlIG9mIHVzZUNvbnRleHQgKGUuZy4gb3V0c2lkZSBvZiBSZWFjdCkgeW91IG5lZWQgdG8gdXNlIHRoaXMgaW5zdGFuY2UgKHVubGVzcyB5b3Ugd2FudCBtdWx0aXBsZSBzdG9yZXMpIVxuZXhwb3J0IGNvbnN0IEdhbWVTdG9yZUluc3RhbmNlID0gbmV3IEdhbWVTdG9yZSgpO1xuZXhwb3J0IGNvbnN0IEdhbWVTdG9yZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KEdhbWVTdG9yZUluc3RhbmNlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///791\n")}}]);