{"version":3,"sources":["webpack://@micro-snake/game/./src/bootstrap.tsx","webpack://@micro-snake/game/./src/components/Game.tsx","webpack://@micro-snake/game/./src/components/GameManager.tsx","webpack://@micro-snake/game/./src/components/Overlay.tsx","webpack://@micro-snake/game/./src/utils/federatedImport.ts","webpack://@micro-snake/game/../store/index.ts","webpack://@micro-snake/game/../store/src/gameConstants.ts","webpack://@micro-snake/game/../store/src/gameStore.ts","webpack://@micro-snake/game/../store/src/index.ts","webpack://@micro-snake/game/../store/src/lazyPluginProvider.tsx"],"names":["rootElement","document","getElementById","render","Snake","observer","gameStore","plugins","playerPosition","setVelocity","trail","setFPS","setTailSize","velocity","React","useEffect","slice","length","some","tx","ty","x","y","CONSTANTS","startTailSize","startFps","handleKeyDownMemo","useCallback","event","newVelocity","currentVelocity","keyCode","velocityByKeyCode","maybeGetVelocityFromKeyDown","style","outline","onKeyDown","tabIndex","Stage","width","canvasSize","height","Layer","Rect","fill","map","i","key","tileSize","gridSize","Object","values","filter","Component","module","Suspense","fallback","LazyPluginProvider","Plugin","asyncLoad","useState","Apple","lazy","dynamicImport","getRemoteEntryUrl","enabled","fqdn","scope","Teleport","setPlugins","handleAddPlugin","state","console","warn","handleSubmit","formData","FormData","target","get","String","log","preventDefault","Grid","container","item","xs","lg","spacing","Table","size","TableHead","TableRow","TableCell","TableBody","Checkbox","color","checked","onChange","onSubmit","display","flexDirection","TextField","margin","label","name","placeholder","Button","variant","type","Overlay","allowPause","score","running","suspendGame","startGame","Text","text","padding","onClick","align","filename","window","Promise","resolve","reject","element","createElement","src","async","onload","parentElement","removeChild","onerror","err","head","appendChild","startsWith","init","default","factory","error","ghPagesUrls","fruit","wildcard","port","HOSTNAME","location","hostname","includes","split","tileSizeMultiplier","this","startPosition","configure","enforceActions","tailSize","lastFrameTime","Date","now","fps","action","tick","requestAnimationFrame","elapsed","frameInterval","updatePlayerPosition","px","py","vx","vy","newPlayerPosition","concat","setPlayerPosition","getRandomPosition","Math","floor","random","makeObservable","observable","computed","onBecomeObserved","onBecomeUnobserved","GameStore","GameStoreInstance","GameStoreContext","createContext","rest","setGameStore","then"],"mappings":"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","file":"613.js","sourcesContent":["import * as React from 'react';\nimport { render } from 'react-dom';\nimport GameManager from './components/GameManager';\n// import '../styles.less';\n\nconst rootElement = document.getElementById('root');\nrender(\n  <main>\n    <section>\n      <GameManager />\n    </section>\n  </main>,\n  rootElement\n);\n","import {\n  CONSTANTS,\n  GameState,\n  GameStore,\n  LazyPluginProvider,\n  velocityByKeyCode\n} from '@micro-snake/engine';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Layer, Rect, Stage } from 'react-konva';\nimport { Plugins } from './GameManager';\nimport Overlay from './Overlay';\n\nconst maybeGetVelocityFromKeyDown = (\n  { keyCode }: React.KeyboardEvent<HTMLDivElement>,\n  currentVelocity: GameState['velocity']\n) => {\n  const newVelocity = velocityByKeyCode[keyCode];\n\n  if (\n    newVelocity &&\n    // no \"reverse\"\n    (currentVelocity.x === 0 || currentVelocity.x !== -newVelocity.x) &&\n    (currentVelocity.y === 0 || currentVelocity.y !== -newVelocity.y)\n  ) {\n    return velocityByKeyCode[keyCode];\n  }\n};\n\nconst Snake: React.FunctionComponent<{\n  gameStore: GameStore;\n  plugins?: Plugins;\n}> = observer(function ({ gameStore, plugins = {} }) {\n  const { playerPosition, setVelocity, trail, setFPS, setTailSize, velocity } =\n    gameStore;\n\n  React.useEffect(() => {\n    // check to see if the head has contacted any part of the body\n    if (\n      trail\n        .slice(0, trail.length - 1)\n        .some(\n          ({ x: tx, y: ty }) =>\n            tx === playerPosition.x && ty === playerPosition.y\n        )\n    ) {\n      // punish the snake\n      setTailSize(CONSTANTS.startTailSize);\n      setFPS(CONSTANTS.startFps);\n    }\n  }, [playerPosition, trail]);\n\n  const handleKeyDownMemo = React.useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      const newVelocity = maybeGetVelocityFromKeyDown(event, velocity);\n      if (newVelocity) {\n        setVelocity(newVelocity);\n      }\n    },\n    [velocity]\n  );\n\n  return (\n    <div style={{ outline: 'none' }} onKeyDown={handleKeyDownMemo} tabIndex={1}>\n      <Stage width={CONSTANTS.canvasSize} height={CONSTANTS.canvasSize}>\n        <Layer>\n          {/* background */}\n          <Rect\n            width={CONSTANTS.canvasSize}\n            height={CONSTANTS.canvasSize}\n            fill='black'\n          />\n        </Layer>\n        <Layer>\n          {/* snake */}\n          {trail.map(({ x, y }, i) => (\n            <Rect\n              key={i}\n              fill='lime'\n              width={CONSTANTS.tileSize}\n              height={CONSTANTS.tileSize}\n              x={x * CONSTANTS.gridSize}\n              y={y * CONSTANTS.gridSize}\n            />\n          ))}\n        </Layer>\n        {/* add remote plugins */}\n        {Object.values(plugins)\n          .filter(({ enabled }) => enabled)\n          .map(({ Component, module }) => (\n            <React.Suspense fallback={null} key={module}>\n              <Component gameStore={gameStore} />\n            </React.Suspense>\n          ))}\n        {/* this is a local plugin */}\n        <Overlay gameStore={gameStore} />\n      </Stage>\n    </div>\n  );\n});\n\nexport default ({ plugins }: { plugins?: Plugins }) => (\n  <LazyPluginProvider\n    Plugin={Snake}\n    plugins={plugins}\n    asyncLoad={() => import('engine/Store')}\n  />\n);\n","import { GamePlugin } from '@micro-snake/engine';\nimport {\n  Button,\n  Checkbox,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField\n} from '@mui/material';\nimport * as React from 'react';\nimport { dynamicImport, getRemoteEntryUrl } from '../utils/federatedImport';\nimport Game from './Game';\n\nexport interface PluginState {\n  enabled: boolean;\n  fqdn: string;\n  module: string;\n  scope: string;\n  Component: React.LazyExoticComponent<GamePlugin>;\n}\n\nexport interface Plugins {\n  [moduleName: string]: PluginState;\n}\n\n// manage game plugins for the game\nconst GameManager = function () {\n  const [plugins, setPlugins] = React.useState<{\n    [pluginName: string]: PluginState;\n  }>({\n    Apple: {\n      Component: React.lazy<GamePlugin>(() =>\n        dynamicImport(getRemoteEntryUrl(1338, 'fruit'), 'fruit', 'Apple')\n      ),\n      enabled: true,\n      fqdn: getRemoteEntryUrl(1338, 'fruit'),\n      scope: 'fruit',\n      module: 'Apple'\n    },\n    Teleport: {\n      Component: React.lazy<GamePlugin>(() =>\n        dynamicImport(\n          getRemoteEntryUrl(1340, 'wildcard'),\n          'wildcard',\n          'Teleport'\n        )\n      ),\n      enabled: false,\n      fqdn: getRemoteEntryUrl(1340, 'wildcard'),\n      scope: 'wildcard',\n      module: 'Teleport'\n    }\n  });\n\n  const handleAddPlugin = React.useCallback(\n    (\n      fqdn: PluginState['fqdn'],\n      scope: string,\n      module: PluginState['module']\n    ) => {\n      setPlugins((state) => {\n        if (state[module]) {\n          console.warn(`${module} already exists, did nothing`);\n          return state;\n        }\n        return {\n          ...state,\n          [module]: {\n            fqdn,\n            enabled: true,\n            module,\n            scope,\n            Component: React.lazy<GamePlugin>(() =>\n              dynamicImport(fqdn, scope, module)\n            )\n          }\n        };\n      });\n    },\n    [plugins]\n  );\n\n  const handleSubmit = React.useCallback<\n    React.FormEventHandler<HTMLFormElement>\n  >((event) => {\n    const formData = new FormData(event.target as HTMLFormElement);\n    const fqdn = formData.get('fqdn');\n    const scope = formData.get('scope');\n    const module = formData.get('module');\n    if (fqdn && scope && module) {\n      handleAddPlugin(String(fqdn), String(scope), String(module));\n    }\n\n    console.log(event);\n    event.preventDefault();\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} lg={4}>\n        <Game plugins={plugins} />\n      </Grid>\n      <Grid container xs={12} lg={4} spacing={2}>\n        <Grid item xs={12}>\n          Active Plugins:\n          <Table size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>FQDN</TableCell>\n                <TableCell>Scope</TableCell>\n                <TableCell>Module</TableCell>\n                <TableCell>Active</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.values(plugins).map(\n                ({ module, fqdn, scope, enabled }) => {\n                  return (\n                    <TableRow key={module}>\n                      <TableCell>\n                        <pre>{fqdn}</pre>\n                      </TableCell>\n                      <TableCell>{scope}</TableCell>\n                      <TableCell>{module}</TableCell>\n                      <TableCell>\n                        <Checkbox\n                          color={enabled ? 'success' : 'error'}\n                          checked={enabled}\n                          onChange={(\n                            event: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setPlugins((state) => {\n                              state[module].enabled = event.target.checked;\n                              return { ...state };\n                            });\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                }\n              )}\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid item xs={12}>\n          <form\n            onSubmit={handleSubmit}\n            style={{ display: 'flex', flexDirection: 'column' }}\n          >\n            Add plugins:\n            <TextField\n              margin='dense'\n              size='small'\n              label='FQDN'\n              name='fqdn'\n              placeholder={getRemoteEntryUrl(1340, 'fruit')}\n            />\n            <TextField\n              margin='dense'\n              size='small'\n              label='Scope'\n              name='scope'\n              placeholder='plum'\n            />\n            <TextField\n              margin='dense'\n              size='small'\n              label='Module Name'\n              name='module'\n              placeholder='Plum'\n            />\n            <Button variant='contained' type='submit'>\n              Add Plugin\n            </Button>\n            <pre>\n              Example: Plum plugin is at {getRemoteEntryUrl(1338, 'fruit')},\n              fruit, Plum\n            </pre>\n          </form>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GameManager;\n","import { CONSTANTS, GameStore } from '@micro-snake/engine';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Layer, Text } from 'react-konva';\n\nconst Overlay: React.FunctionComponent<{\n  gameStore: GameStore;\n  allowPause?: boolean;\n}> = observer(function ({ gameStore, allowPause = false }) {\n  const { score, running, suspendGame, startGame } = gameStore;\n\n  return (\n    <Layer>\n      {/* Overlay/Score */}\n      <Text text={`Score: ${score}`} fill='white' padding={10} />\n      {allowPause && (\n        <Text\n          text={running ? 'Pause' : 'Resume'}\n          fill='white'\n          padding={10}\n          onClick={running ? suspendGame : startGame}\n          width={CONSTANTS.canvasSize}\n          align='right'\n        />\n      )}\n    </Layer>\n  );\n});\n\nexport default Overlay;\n","// these are webpack types but couldn't find them exposed\ntype Factory = () => any;\ninterface Container {\n  init(shareScope: any): void;\n  get(module: string): Factory;\n}\n\ndeclare const __webpack_init_sharing__: (shareScope: string) => Promise<void>;\ndeclare const __webpack_share_scopes__: { default: any };\n\nexport async function dynamicImport(\n  fqdn: string,\n  scope: string,\n  module: string,\n  filename = 'remoteEntry.js'\n) {\n  try {\n    await __webpack_init_sharing__('default');\n    if (!(window as any)[scope]) {\n      await new Promise<void>((resolve, reject) => {\n        const element = document.createElement('script');\n\n        element.src = `${fqdn}/${filename}`;\n        element.type = 'text/javascript';\n        element.async = true;\n\n        element.onload = () => {\n          element.parentElement?.removeChild(element);\n          resolve();\n        };\n\n        element.onerror = (err) => {\n          element.parentElement?.removeChild(element);\n          reject(err);\n        };\n\n        document.head.appendChild(element);\n      });\n    }\n    if (!module.startsWith('./')) {\n      module = `./${module}`;\n    }\n\n    const container = (window as any)[scope] as Container;\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await container.get(module);\n\n    return factory();\n  } catch (error) {\n    console.error('something went wrong with a federated module', error);\n  }\n}\n\nconst ghPagesUrls: {\n  [scope: string]: string;\n} = {\n  fruit: require('@micro-snake/plugin-fruit/package.json').homepage,\n  wildcard: require('@micro-snake/plugin-wildcard/package.json').homepage\n};\n\nexport function getRemoteEntryUrl(port: number, scope: string) {\n  const HOSTNAME = window.location.hostname;\n\n  // Check if the example is running on codesandbox\n  // https://codesandbox.io/docs/environment\n  if (!HOSTNAME.includes('sandbox')) {\n    return `//localhost:${port}`;\n  } else if (HOSTNAME.includes('github.io')) {\n    // check for gh-pages\n    return ghPagesUrls[scope];\n  }\n\n  return `//${HOSTNAME.split('.')[0]}-${port}.sse.codesandbox.io`;\n}\n","export * from './src';\n","export const CONSTANTS = {\n  gridSize: 20,\n  tileSizeMultiplier: 0.9,\n  get tileSize() {\n    return this.gridSize * this.tileSizeMultiplier;\n  },\n  get canvasSize() {\n    return this.gridSize * this.gridSize;\n  },\n  get startPosition() {\n    return { x: this.gridSize / 2, y: this.gridSize / 2 };\n  },\n  startFps: 6,\n  startTailSize: 5\n};\n\nexport interface GameState {\n  playerPosition: { x: number; y: number };\n  trail: { x: number; y: number }[];\n  tailSize: number;\n  velocity: {\n    x: number;\n    y: number;\n  };\n  fps: number;\n  frameInterval: number;\n  lastFrameTime: number;\n  running: boolean;\n}\n\nexport const velocityByKeyCode: { [key: number]: GameState['velocity'] } = {\n  // these should really account for the tileSize\n  37: { x: -1, y: 0 },\n  38: { x: 0, y: -1 },\n  39: { x: 1, y: 0 },\n  40: { x: 0, y: 1 }\n};\n","import {\n  action,\n  computed,\n  configure,\n  makeObservable,\n  observable,\n  onBecomeObserved,\n  onBecomeUnobserved\n} from 'mobx';\nimport { createContext } from 'react';\nimport { CONSTANTS, GameState } from './gameConstants';\n\n// without configuring enforceActions it would be possible to modify any observable from anywhere\nconfigure({ enforceActions: 'observed' });\n\n// base class\nexport class GameStore implements GameState {\n  gridSize = CONSTANTS.gridSize;\n  // initial game state, player is centered with no velocity\n  playerPosition = CONSTANTS.startPosition;\n  velocity = {\n    x: 0,\n    y: 0\n  };\n  trail = [CONSTANTS.startPosition];\n  tailSize = CONSTANTS.startTailSize;\n  // housekeeping to control animation\n  running = false;\n  // use to control fps and therefore game speed\n  lastFrameTime = Date.now();\n  fps = CONSTANTS.startFps;\n  get frameInterval() {\n    return 1000 / this.fps;\n  }\n  get score() {\n    return this.tailSize - CONSTANTS.startTailSize;\n  }\n\n  constructor() {\n    makeObservable(this, {\n      playerPosition: observable,\n      trail: observable,\n      tailSize: observable,\n      frameInterval: computed,\n      score: computed,\n      running: observable\n    });\n\n    // setup lazy observables\n    onBecomeObserved(this, 'playerPosition', this.startGame);\n    onBecomeUnobserved(this, 'playerPosition', this.suspendGame);\n  }\n  suspendGame = action(() => {\n    this.running = false;\n  });\n  startGame = () => {\n    this.running = true;\n    this.tick();\n  };\n  tick = () => {\n    // render loop control\n    if (this.running) {\n      requestAnimationFrame(() => this.tick());\n      const now = Date.now();\n      const elapsed = now - this.lastFrameTime;\n      // render speed control\n      if (elapsed > this.frameInterval) {\n        this.lastFrameTime = now - (elapsed % this.frameInterval);\n\n        this.updatePlayerPosition(this.playerPosition, this.velocity);\n      }\n    }\n  };\n\n  updatePlayerPosition = action(\n    (\n      { x: px, y: py }: GameState['playerPosition'],\n      { x: vx, y: vy }: GameState['velocity']\n    ) => {\n      if (vx || vy) {\n        const newPlayerPosition = {\n          x: px + vx,\n          y: py + vy\n        };\n\n        if (newPlayerPosition.x < 0) {\n          newPlayerPosition.x = this.gridSize - 1;\n        }\n        if (newPlayerPosition.x > this.gridSize - 1) {\n          newPlayerPosition.x = 0;\n        }\n        if (newPlayerPosition.y < 0) {\n          newPlayerPosition.y = this.gridSize - 1;\n        }\n        if (newPlayerPosition.y > this.gridSize - 1) {\n          newPlayerPosition.y = 0;\n        }\n\n        this.playerPosition = newPlayerPosition;\n        this.trail = this.trail.concat(newPlayerPosition).slice(-this.tailSize);\n      }\n    }\n  );\n\n  setVelocity = action((newVelocity: GameState['velocity']) => {\n    this.velocity = newVelocity;\n  });\n  setTailSize = action((tailSize: GameState['tailSize']) => {\n    this.tailSize = tailSize;\n  });\n  setFPS = action((fps: GameState['fps']) => {\n    this.fps = fps;\n  });\n  setPlayerPosition = action(\n    (newPlayerPosition: GameState['playerPosition']) => {\n      this.playerPosition = newPlayerPosition;\n    }\n  );\n  getRandomPosition = () => ({\n    x: Math.floor(Math.random() * this.gridSize),\n    y: Math.floor(Math.random() * this.gridSize)\n  });\n}\n\n// all references should point to this singleton.\n// If store is accessed outside of useContext (e.g. outside of React) you need to use this instance (unless you want multiple stores)!\nexport const GameStoreInstance = new GameStore();\n\nexport const GameStoreContext = createContext(GameStoreInstance);\n\nexport type GamePlugin = React.FunctionComponent<{ gameStore: GameStore }>;\n","export * from './gameConstants';\nexport * from './gameStore';\nexport * from './lazyPluginProvider';\n","import React from 'react';\nimport { GamePlugin, GameStore } from './gameStore';\n\nexport type LazyPluginProvider = React.FunctionComponent<{\n  Plugin: GamePlugin;\n  asyncLoad: () => Promise<{ GameStoreInstance: GameStore }>;\n  [rest: string]: any;\n}>;\n\nexport const LazyPluginProvider: LazyPluginProvider = ({\n  Plugin,\n  asyncLoad,\n  ...rest\n}) => {\n  const [gameStore, setGameStore] = React.useState<GameStore | null>(null);\n\n  React.useEffect(() => {\n    asyncLoad().then((module) => setGameStore(module.GameStoreInstance));\n  }, []);\n\n  return gameStore ? <Plugin gameStore={gameStore} {...rest} /> : null;\n};\n"],"sourceRoot":""}