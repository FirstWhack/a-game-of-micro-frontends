{"version":3,"file":"675.js","mappings":"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","sources":["webpack://@micro-snake/game/./src/utils/federatedImport.ts","webpack://@micro-snake/game/../../packages/store/src/gameConstants.ts","webpack://@micro-snake/game/../../packages/store/src/gameStore.ts","webpack://@micro-snake/game/../../packages/store/src/lazyPluginProvider.tsx","webpack://@micro-snake/game/./src/components/Overlay.tsx","webpack://@micro-snake/game/./src/components/Game.tsx","webpack://@micro-snake/game/./src/bootstrap.tsx","webpack://@micro-snake/game/./src/components/GameManager.tsx"],"sourcesContent":["// these are webpack types but couldn't find them exposed\ntype Factory = () => any;\ninterface Container {\n  init(shareScope: any): void;\n  get(module: string): Factory;\n}\n\ndeclare const __webpack_init_sharing__: (shareScope: string) => Promise<void>;\ndeclare const __webpack_share_scopes__: { default: any };\n\nexport async function dynamicImport(\n  fqdn: string,\n  scope: string,\n  module: string,\n  filename = 'remoteEntry.js'\n) {\n  try {\n    await __webpack_init_sharing__('default');\n    if (!(window as any)[scope]) {\n      await new Promise<void>((resolve, reject) => {\n        const element = document.createElement('script');\n\n        element.src = `${fqdn}/${filename}`;\n        element.type = 'text/javascript';\n        element.async = true;\n\n        element.onload = () => {\n          element.parentElement?.removeChild(element);\n          resolve();\n        };\n\n        element.onerror = (err) => {\n          element.parentElement?.removeChild(element);\n          reject(err);\n        };\n\n        document.head.appendChild(element);\n      });\n    }\n    if (!module.startsWith('./')) {\n      module = `./${module}`;\n    }\n\n    const container = (window as any)[scope] as Container;\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await container.get(module);\n\n    return factory();\n  } catch (error) {\n    console.error('something went wrong with a federated module', error);\n  }\n}\n\nconst ghPagesUrls: {\n  [scope: string]: string;\n} = {\n  fruit: require('@micro-snake/plugin-fruit/package.json').homepage,\n  wildcard: require('@micro-snake/plugin-wildcard/package.json').homepage\n};\n\nexport function getRemoteEntryUrl(port: number, scope: string) {\n  const HOSTNAME = window.location.hostname;\n\n  if (HOSTNAME.includes('github.io')) {\n    // check for gh-pages\n    return ghPagesUrls[scope];\n  } else if (HOSTNAME.includes('sandbox')) {\n    // Check if the example is running on codesandbox\n    // https://codesandbox.io/docs/environment\n    return `//${HOSTNAME.split('.')[0]}-${port}.sse.codesandbox.io`;\n  }\n\n  return `//localhost:${port}`;\n}\n","export const CONSTANTS = {\n  gridSize: 20,\n  tileSizeMultiplier: 0.9,\n  get tileSize() {\n    return this.gridSize * this.tileSizeMultiplier;\n  },\n  get canvasSize() {\n    return this.gridSize * this.gridSize;\n  },\n  get startPosition() {\n    return { x: this.gridSize / 2, y: this.gridSize / 2 };\n  },\n  startFps: 6,\n  startTailSize: 5\n};\n\nexport interface GameState {\n  playerPosition: { x: number; y: number };\n  trail: { x: number; y: number }[];\n  tailSize: number;\n  velocity: {\n    x: number;\n    y: number;\n  };\n  fps: number;\n  frameInterval: number;\n  lastFrameTime: number;\n  running: boolean;\n}\n\nexport const velocityByKeyCode: { [key: number]: GameState['velocity'] } = {\n  // these should really account for the tileSize\n  37: { x: -1, y: 0 },\n  38: { x: 0, y: -1 },\n  39: { x: 1, y: 0 },\n  40: { x: 0, y: 1 }\n};\n","import {\n  action,\n  computed,\n  configure,\n  makeObservable,\n  observable,\n  onBecomeObserved,\n  onBecomeUnobserved\n} from 'mobx';\nimport { createContext } from 'react';\nimport { CONSTANTS, GameState } from './gameConstants';\n\n// without configuring enforceActions it would be possible to modify any observable from anywhere\nconfigure({ enforceActions: 'observed' });\n\n// base class\nexport class GameStore implements GameState {\n  gridSize = CONSTANTS.gridSize;\n  // initial game state, player is centered with no velocity\n  playerPosition = CONSTANTS.startPosition;\n  velocity = {\n    x: 0,\n    y: 0\n  };\n  trail = [CONSTANTS.startPosition];\n  tailSize = CONSTANTS.startTailSize;\n  // housekeeping to control animation\n  running = false;\n  // use to control fps and therefore game speed\n  lastFrameTime = Date.now();\n  fps = CONSTANTS.startFps;\n  get frameInterval() {\n    return 1000 / this.fps;\n  }\n  get score() {\n    return this.tailSize - CONSTANTS.startTailSize;\n  }\n\n  constructor() {\n    makeObservable(this, {\n      playerPosition: observable,\n      trail: observable,\n      tailSize: observable,\n      frameInterval: computed,\n      score: computed,\n      running: observable\n    });\n\n    // setup lazy observables\n    onBecomeObserved(this, 'playerPosition', this.startGame);\n    onBecomeUnobserved(this, 'playerPosition', this.suspendGame);\n  }\n  suspendGame = action(() => {\n    this.running = false;\n  });\n  startGame = () => {\n    this.running = true;\n    this.tick();\n  };\n  tick = () => {\n    // render loop control\n    if (this.running) {\n      requestAnimationFrame(() => this.tick());\n      const now = Date.now();\n      const elapsed = now - this.lastFrameTime;\n      // render speed control\n      if (elapsed > this.frameInterval) {\n        this.lastFrameTime = now - (elapsed % this.frameInterval);\n\n        this.updatePlayerPosition(this.playerPosition, this.velocity);\n      }\n    }\n  };\n\n  updatePlayerPosition = action(\n    (\n      { x: px, y: py }: GameState['playerPosition'],\n      { x: vx, y: vy }: GameState['velocity']\n    ) => {\n      if (vx || vy) {\n        const newPlayerPosition = {\n          x: px + vx,\n          y: py + vy\n        };\n\n        if (newPlayerPosition.x < 0) {\n          newPlayerPosition.x = this.gridSize - 1;\n        }\n        if (newPlayerPosition.x > this.gridSize - 1) {\n          newPlayerPosition.x = 0;\n        }\n        if (newPlayerPosition.y < 0) {\n          newPlayerPosition.y = this.gridSize - 1;\n        }\n        if (newPlayerPosition.y > this.gridSize - 1) {\n          newPlayerPosition.y = 0;\n        }\n\n        this.playerPosition = newPlayerPosition;\n        this.trail = this.trail.concat(newPlayerPosition).slice(-this.tailSize);\n      }\n    }\n  );\n\n  setVelocity = action((newVelocity: GameState['velocity']) => {\n    this.velocity = newVelocity;\n  });\n  setTailSize = action((tailSize: GameState['tailSize']) => {\n    this.tailSize = tailSize;\n  });\n  setFPS = action((fps: GameState['fps']) => {\n    this.fps = fps;\n  });\n  setPlayerPosition = action(\n    (newPlayerPosition: GameState['playerPosition']) => {\n      this.playerPosition = newPlayerPosition;\n    }\n  );\n  getRandomPosition = () => ({\n    x: Math.floor(Math.random() * this.gridSize),\n    y: Math.floor(Math.random() * this.gridSize)\n  });\n}\n\n// all references should point to this singleton.\n// If store is accessed outside of useContext (e.g. outside of React) you need to use this instance (unless you want multiple stores)!\nexport const GameStoreInstance = new GameStore();\n\nexport const GameStoreContext = createContext(GameStoreInstance);\n\nexport type GamePlugin = React.FunctionComponent<{ gameStore: GameStore }>;\n","import React from 'react';\nimport { GamePlugin, GameStore } from './gameStore';\n\nexport type LazyPluginProvider = React.FunctionComponent<{\n  Plugin: GamePlugin;\n  asyncLoad: () => Promise<{ GameStoreInstance: GameStore }>;\n  [rest: string]: any;\n}>;\n\nexport const LazyPluginProvider: LazyPluginProvider = ({\n  Plugin,\n  asyncLoad,\n  ...rest\n}) => {\n  const [gameStore, setGameStore] = React.useState<GameStore | null>(null);\n\n  React.useEffect(() => {\n    asyncLoad().then((module) => setGameStore(module.GameStoreInstance));\n  }, []);\n\n  return gameStore ? <Plugin gameStore={gameStore} {...rest} /> : null;\n};\n","import { CONSTANTS, GameStore } from '@micro-snake/engine';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Layer, Text } from 'react-konva';\n\nconst Overlay: React.FunctionComponent<{\n  gameStore: GameStore;\n  allowPause?: boolean;\n}> = observer(function ({ gameStore, allowPause = false }) {\n  const { score, running, suspendGame, startGame } = gameStore;\n\n  return (\n    <Layer>\n      {/* Overlay/Score */}\n      <Text text={`Score: ${score}`} fill='white' padding={10} />\n      {allowPause && (\n        <Text\n          text={running ? 'Pause' : 'Resume'}\n          fill='white'\n          padding={10}\n          onClick={running ? suspendGame : startGame}\n          width={CONSTANTS.canvasSize}\n          align='right'\n        />\n      )}\n    </Layer>\n  );\n});\n\nexport default Overlay;\n","import {\n  CONSTANTS,\n  GameState,\n  GameStore,\n  LazyPluginProvider,\n  velocityByKeyCode\n} from '@micro-snake/engine';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Layer, Rect, Stage } from 'react-konva';\nimport { Plugins } from './GameManager';\nimport Overlay from './Overlay';\n\nconst maybeGetVelocityFromKeyDown = (\n  { keyCode }: React.KeyboardEvent<HTMLDivElement>,\n  currentVelocity: GameState['velocity']\n) => {\n  const newVelocity = velocityByKeyCode[keyCode];\n\n  if (\n    newVelocity &&\n    // no \"reverse\"\n    (currentVelocity.x === 0 || currentVelocity.x !== -newVelocity.x) &&\n    (currentVelocity.y === 0 || currentVelocity.y !== -newVelocity.y)\n  ) {\n    return velocityByKeyCode[keyCode];\n  }\n};\n\nconst Snake: React.FunctionComponent<{\n  gameStore: GameStore;\n  plugins?: Plugins;\n}> = observer(function ({ gameStore, plugins = {} }) {\n  const { playerPosition, setVelocity, trail, setFPS, setTailSize, velocity } =\n    gameStore;\n\n  React.useEffect(() => {\n    // check to see if the head has contacted any part of the body\n    if (\n      trail\n        .slice(0, trail.length - 1)\n        .some(\n          ({ x: tx, y: ty }) =>\n            tx === playerPosition.x && ty === playerPosition.y\n        )\n    ) {\n      // punish the snake\n      setTailSize(CONSTANTS.startTailSize);\n      setFPS(CONSTANTS.startFps);\n    }\n  }, [playerPosition, trail]);\n\n  const handleKeyDownMemo = React.useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      const newVelocity = maybeGetVelocityFromKeyDown(event, velocity);\n      if (newVelocity) {\n        setVelocity(newVelocity);\n      }\n    },\n    [velocity]\n  );\n\n  return (\n    <div style={{ outline: 'none' }} onKeyDown={handleKeyDownMemo} tabIndex={1}>\n      <Stage width={CONSTANTS.canvasSize} height={CONSTANTS.canvasSize}>\n        <Layer>\n          {/* background */}\n          <Rect\n            width={CONSTANTS.canvasSize}\n            height={CONSTANTS.canvasSize}\n            fill='black'\n          />\n        </Layer>\n        <Layer>\n          {/* snake */}\n          {trail.map(({ x, y }, i) => (\n            <Rect\n              key={i}\n              fill='lime'\n              width={CONSTANTS.tileSize}\n              height={CONSTANTS.tileSize}\n              x={x * CONSTANTS.gridSize}\n              y={y * CONSTANTS.gridSize}\n            />\n          ))}\n        </Layer>\n        {/* add remote plugins */}\n        {Object.values(plugins)\n          .filter(({ enabled }) => enabled)\n          .map(({ Component, module }) => (\n            <React.Suspense fallback={null} key={module}>\n              <Component gameStore={gameStore} />\n            </React.Suspense>\n          ))}\n        {/* this is a local plugin */}\n        <Overlay gameStore={gameStore} />\n      </Stage>\n    </div>\n  );\n});\n\nexport default ({ plugins }: { plugins?: Plugins }) => (\n  <LazyPluginProvider\n    Plugin={Snake}\n    plugins={plugins}\n    asyncLoad={() => import('engine/Store')}\n  />\n);\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport GameManager from './components/GameManager';\n// import '../styles.less';\n\nconst rootElement = document.getElementById('root');\nrender(\n  <main>\n    <section>\n      <GameManager />\n    </section>\n  </main>,\n  rootElement\n);\n","import { GamePlugin } from '@micro-snake/engine';\nimport {\n  Button,\n  Checkbox,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField\n} from '@mui/material';\nimport * as React from 'react';\nimport { dynamicImport, getRemoteEntryUrl } from '../utils/federatedImport';\nimport Game from './Game';\n\nexport interface PluginState {\n  enabled: boolean;\n  fqdn: string;\n  module: string;\n  scope: string;\n  Component: React.LazyExoticComponent<GamePlugin>;\n}\n\nexport interface Plugins {\n  [moduleName: string]: PluginState;\n}\n\n// manage game plugins for the game\nconst GameManager = function () {\n  const [plugins, setPlugins] = React.useState<{\n    [pluginName: string]: PluginState;\n  }>({\n    Apple: {\n      Component: React.lazy<GamePlugin>(() =>\n        dynamicImport(getRemoteEntryUrl(1338, 'fruit'), 'fruit', 'Apple')\n      ),\n      enabled: true,\n      fqdn: getRemoteEntryUrl(1338, 'fruit'),\n      scope: 'fruit',\n      module: 'Apple'\n    },\n    Teleport: {\n      Component: React.lazy<GamePlugin>(() =>\n        dynamicImport(\n          getRemoteEntryUrl(1340, 'wildcard'),\n          'wildcard',\n          'Teleport'\n        )\n      ),\n      enabled: false,\n      fqdn: getRemoteEntryUrl(1340, 'wildcard'),\n      scope: 'wildcard',\n      module: 'Teleport'\n    }\n  });\n\n  const handleAddPlugin = React.useCallback(\n    (\n      fqdn: PluginState['fqdn'],\n      scope: string,\n      module: PluginState['module']\n    ) => {\n      setPlugins((state) => {\n        if (state[module]) {\n          console.warn(`${module} already exists, did nothing`);\n          return state;\n        }\n        return {\n          ...state,\n          [module]: {\n            fqdn,\n            enabled: true,\n            module,\n            scope,\n            Component: React.lazy<GamePlugin>(() =>\n              dynamicImport(fqdn, scope, module)\n            )\n          }\n        };\n      });\n    },\n    [plugins]\n  );\n\n  const handleSubmit = React.useCallback<\n    React.FormEventHandler<HTMLFormElement>\n  >((event) => {\n    const formData = new FormData(event.target as HTMLFormElement);\n    const fqdn = formData.get('fqdn');\n    const scope = formData.get('scope');\n    const module = formData.get('module');\n    if (fqdn && scope && module) {\n      handleAddPlugin(String(fqdn), String(scope), String(module));\n    }\n\n    console.log(event);\n    event.preventDefault();\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} lg={4}>\n        <Game plugins={plugins} />\n      </Grid>\n      <Grid container xs={12} lg={4} spacing={2}>\n        <Grid item xs={12}>\n          Active Plugins:\n          <Table size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>FQDN</TableCell>\n                <TableCell>Scope</TableCell>\n                <TableCell>Module</TableCell>\n                <TableCell>Active</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.values(plugins).map(\n                ({ module, fqdn, scope, enabled }) => {\n                  return (\n                    <TableRow key={module}>\n                      <TableCell>\n                        <pre>{fqdn}</pre>\n                      </TableCell>\n                      <TableCell>{scope}</TableCell>\n                      <TableCell>{module}</TableCell>\n                      <TableCell>\n                        <Checkbox\n                          color={enabled ? 'success' : 'error'}\n                          checked={enabled}\n                          onChange={(\n                            event: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setPlugins((state) => {\n                              state[module].enabled = event.target.checked;\n                              return { ...state };\n                            });\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                }\n              )}\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid item xs={12}>\n          <form\n            onSubmit={handleSubmit}\n            style={{ display: 'flex', flexDirection: 'column' }}\n          >\n            Add plugins:\n            <TextField\n              margin='dense'\n              size='small'\n              label='FQDN'\n              name='fqdn'\n              placeholder={getRemoteEntryUrl(1340, 'fruit')}\n            />\n            <TextField\n              margin='dense'\n              size='small'\n              label='Scope'\n              name='scope'\n              placeholder='plum'\n            />\n            <TextField\n              margin='dense'\n              size='small'\n              label='Module Name'\n              name='module'\n              placeholder='Plum'\n            />\n            <Button variant='contained' type='submit'>\n              Add Plugin\n            </Button>\n            <pre>\n              Example: Plum plugin is at {getRemoteEntryUrl(1338, 'fruit')},\n              fruit, Plum\n            </pre>\n          </form>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GameManager;\n"],"names":["dynamicImport","fqdn","scope","module","filename","window","Promise","resolve","reject","element","document","createElement","src","type","async","onload","parentElement","removeChild","onerror","err","head","appendChild","startsWith","container","init","default","get","error","console","ghPagesUrls","fruit","wildcard","getRemoteEntryUrl","port","HOSTNAME","location","hostname","includes","split","CONSTANTS","gridSize","tileSizeMultiplier","tileSize","this","canvasSize","startPosition","x","y","startFps","startTailSize","velocityByKeyCode","configure","enforceActions","GameStoreInstance","constructor","playerPosition","velocity","trail","tailSize","running","lastFrameTime","Date","now","fps","suspendGame","action","startGame","tick","requestAnimationFrame","elapsed","frameInterval","updatePlayerPosition","px","py","vx","vy","newPlayerPosition","concat","slice","setVelocity","newVelocity","setTailSize","setFPS","setPlayerPosition","getRandomPosition","Math","floor","random","makeObservable","observable","computed","score","onBecomeObserved","onBecomeUnobserved","createContext","LazyPluginProvider","Plugin","asyncLoad","rest","gameStore","setGameStore","then","observer","allowPause","Layer","Text","text","fill","padding","onClick","width","align","Snake","plugins","length","some","tx","ty","handleKeyDownMemo","event","keyCode","currentVelocity","maybeGetVelocityFromKeyDown","style","outline","onKeyDown","tabIndex","Stage","height","Rect","map","i","key","Object","values","filter","enabled","Component","fallback","rootElement","getElementById","render","setPlugins","Apple","Teleport","handleAddPlugin","state","warn","handleSubmit","formData","FormData","target","String","log","preventDefault","Grid","item","xs","lg","Game","spacing","Table","size","TableHead","TableRow","TableCell","TableBody","Checkbox","color","checked","onChange","onSubmit","display","flexDirection","TextField","margin","label","name","placeholder","Button","variant"],"sourceRoot":""}