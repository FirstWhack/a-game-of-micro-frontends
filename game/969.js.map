{"version":3,"file":"969.js","mappings":"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","sources":["webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Arc.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Line.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Path.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Arrow.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Circle.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Ellipse.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Image.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Label.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Rect.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/RegularPolygon.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Ring.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Sprite.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Star.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Text.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/TextPath.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Transformer.js","webpack://@micro-snake/game/../../node_modules/konva/lib/shapes/Wedge.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Blur.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Enhance.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Mask.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Brighten.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Contrast.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Emboss.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/HSL.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/HSV.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Kaleidoscope.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Noise.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Pixelate.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Posterize.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/RGB.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/RGBA.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Threshold.js","webpack://@micro-snake/game/../../node_modules/konva/lib/_FullInternals.js","webpack://@micro-snake/game/../../node_modules/konva/lib/index.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Grayscale.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Invert.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Sepia.js","webpack://@micro-snake/game/../../node_modules/konva/lib/filters/Solarize.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n    _sceneFunc(context) {\n        var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getNumberArrayValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for (n = 2; n < len - 2; n += 2) {\n        cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nexport class Line extends Shape {\n    constructor(config) {\n        super(config);\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n_registerNode(Line);\nFactory.addGetterSetter(Line, 'closed', false);\nFactory.addGetterSetter(Line, 'bezier', false);\nFactory.addGetterSetter(Line, 'tension', 0, getNumberValidator());\nFactory.addGetterSetter(Line, 'points', [], getNumberArrayValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nexport class Path extends Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n            this.pathLength += this.dataArray[i].pathLength;\n        }\n        this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise,\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise,\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise,\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n_registerNode(Path);\nFactory.addGetterSetter(Path, 'data');\n","import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nArrow.prototype.className = 'Arrow';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Circle extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Circle);\nFactory.addGetterSetter(Circle, 'radius', 0, getNumberValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Ellipse extends Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n_registerNode(Ellipse);\nFactory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory.addGetterSetter(Ellipse, 'radiusX', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, 'radiusY', 0, getNumberValidator());\n","import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Image extends Shape {\n    constructor(attrs) {\n        super(attrs);\n        this.on('imageChange.konva', () => {\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) {\n            return;\n        }\n        if (image && image.readyState === 4) {\n            return;\n        }\n        if (image && image['addEventListener']) {\n            image['addEventListener']('load', () => {\n                this._requestDraw();\n            });\n        }\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) {\n                params = [\n                    image,\n                    this.cropX(),\n                    this.cropY(),\n                    cropWidth,\n                    cropHeight,\n                    0,\n                    0,\n                    width,\n                    height,\n                ];\n            }\n            else {\n                params = [image, 0, 0, width, height];\n            }\n        }\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        var width = this.width(), height = this.height();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback, onError = null) {\n        var img = Util.createImageElement();\n        img.onload = function () {\n            var image = new Image({\n                image: img,\n            });\n            callback(image);\n        };\n        img.onerror = onError;\n        img.crossOrigin = 'Anonymous';\n        img.src = url;\n    }\n}\nImage.prototype.className = 'Image';\n_registerNode(Image);\nFactory.addGetterSetter(Image, 'image');\nFactory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Image, 'cropX', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropY', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropHeight', 0, getNumberValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nLabel.prototype.className = 'Label';\n_registerNode(Label);\nexport class Tag extends Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nTag.prototype.className = 'Tag';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { getNumberOrArrayOfNumbersValidator } from '../Validators.js';\nexport class Rect extends Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            let topLeft = 0;\n            let topRight = 0;\n            let bottomLeft = 0;\n            let bottomRight = 0;\n            if (typeof cornerRadius === 'number') {\n                topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n            }\n            else {\n                topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n                topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n                bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n                bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n            }\n            context.moveTo(topLeft, 0);\n            context.lineTo(width - topRight, 0);\n            context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n            context.lineTo(width, height - bottomRight);\n            context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n            context.lineTo(bottomLeft, height);\n            context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n            context.lineTo(0, topLeft);\n            context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nRect.prototype.className = 'Rect';\n_registerNode(Rect);\nFactory.addGetterSetter(Rect, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class RegularPolygon extends Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (var n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (var n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n_registerNode(RegularPolygon);\nFactory.addGetterSetter(RegularPolygon, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(RegularPolygon, 'sides', 0, getNumberValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar PIx2 = Math.PI * 2;\nexport class Ring extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\n        context.moveTo(this.outerRadius(), 0);\n        context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nRing.prototype.className = 'Ring';\nRing.prototype._centroid = true;\nRing.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Ring);\nFactory.addGetterSetter(Ring, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Ring, 'outerRadius', 0, getNumberValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Animation } from '../Animation.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Sprite extends Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation(() => {\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on('animationChange.konva', function () {\n            this.frameIndex(0);\n        });\n        this.on('frameIndexChange.konva', function () {\n            this._updated = true;\n        });\n        this.on('frameRateChange.konva', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nSprite.prototype.className = 'Sprite';\n_registerNode(Sprite);\nFactory.addGetterSetter(Sprite, 'animation');\nFactory.addGetterSetter(Sprite, 'animations');\nFactory.addGetterSetter(Sprite, 'frameOffsets');\nFactory.addGetterSetter(Sprite, 'image');\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex',\n});\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Star extends Shape {\n    _sceneFunc(context) {\n        var innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\n        context.beginPath();\n        context.moveTo(0, 0 - outerRadius);\n        for (var n = 1; n < numPoints * 2; n++) {\n            var radius = n % 2 === 0 ? outerRadius : innerRadius;\n            var x = radius * Math.sin((n * Math.PI) / numPoints);\n            var y = -1 * radius * Math.cos((n * Math.PI) / numPoints);\n            context.lineTo(x, y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nStar.prototype.className = 'Star';\nStar.prototype._centroid = true;\nStar.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Star);\nFactory.addGetterSetter(Star, 'numPoints', 5, getNumberValidator());\nFactory.addGetterSetter(Star, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Star, 'outerRadius', 0, getNumberValidator());\n","import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getStringValidator, getNumberOrAutoValidator, getBooleanValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport function stringToArray(string) {\n    return Array.from(string);\n}\nvar AUTO = 'auto', CENTER = 'center', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '…', ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontVariant',\n    'padding',\n    'align',\n    'verticalAlign',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'wrap',\n    'ellipsis',\n    'letterSpacing',\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\nfunction normalizeFontFamily(fontFamily) {\n    return fontFamily\n        .split(',')\n        .map((family) => {\n        family = family.trim();\n        const hasSpace = family.indexOf(' ') >= 0;\n        const hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\n        if (hasSpace && !hasQuotes) {\n            family = `\"${family}\"`;\n        }\n        return family;\n    })\n        .join(', ');\n}\nvar dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n}\nfunction _fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops &&\n        !config.fillPatternImage) {\n        config.fill = config.fill || 'black';\n    }\n    return config;\n}\nexport class Text extends Shape {\n    constructor(config) {\n        super(checkDefaultFill(config));\n        this._partialTextX = 0;\n        this._partialTextY = 0;\n        for (var n = 0; n < attrChangeListLen; n++) {\n            this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n        }\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        var textArr = this.textArr, textArrLen = textArr.length;\n        if (!this.text()) {\n            return;\n        }\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\n        var translateY = 0;\n        var translateY = lineHeightPx / 2;\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', MIDDLE);\n        context.setAttr('textAlign', LEFT);\n        if (verticalAlign === MIDDLE) {\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        }\n        else if (verticalAlign === BOTTOM) {\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        }\n        context.translate(padding, alignY + padding);\n        for (n = 0; n < textArrLen; n++) {\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = obj.lastInParagraph, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === RIGHT) {\n                lineTranslateX += totalWidth - width - padding * 2;\n            }\n            else if (align === CENTER) {\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            }\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (letterSpacing !== 0 || align === JUSTIFY) {\n                spacesNumber = text.split(' ').length - 1;\n                var array = stringToArray(text);\n                for (var li = 0; li < array.length; li++) {\n                    var letter = array[li];\n                    if (letter === ' ' && !lastLine && align === JUSTIFY) {\n                        lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\n                    }\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\n                }\n            }\n            else {\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) {\n                translateY += lineHeightPx;\n            }\n        }\n    }\n    _hitFunc(context) {\n        var width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    setText(text) {\n        var str = Util._isString(text)\n            ? text\n            : text === null || text === undefined\n                ? ''\n                : text + '';\n        this._setAttr(TEXT, str);\n        return this;\n    }\n    getWidth() {\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    }\n    getHeight() {\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n        return isAuto\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\n                this.padding() * 2\n            : this.attrs.height;\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    measureSize(text) {\n        var _context = getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: fontSize,\n        };\n    }\n    _getContextFont() {\n        return (this.fontStyle() +\n            SPACE +\n            this.fontVariant() +\n            SPACE +\n            (this.fontSize() + PX_SPACE) +\n            normalizeFontFamily(this.fontFamily()));\n    }\n    _addTextLine(line) {\n        if (this.align() === JUSTIFY) {\n            line = line.trim();\n        }\n        var width = this._getTextWidth(line);\n        return this.textArr.push({\n            text: line,\n            width: width,\n            lastInParagraph: false,\n        });\n    }\n    _getTextWidth(text) {\n        var letterSpacing = this.letterSpacing();\n        var length = text.length;\n        return (getDummyContext().measureText(text).width +\n            (length ? letterSpacing * (length - 1) : 0));\n    }\n    _setTextData() {\n        var lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\n        this.textArr = [];\n        getDummyContext().font = this._getContextFont();\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n        for (var i = 0, max = lines.length; i < max; ++i) {\n            var line = lines[i];\n            var lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) {\n                while (line.length > 0) {\n                    var low = 0, high = line.length, match = '', matchWidth = 0;\n                    while (low < high) {\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                        if (substrWidth <= maxWidth) {\n                            low = mid + 1;\n                            match = substr;\n                            matchWidth = substrWidth;\n                        }\n                        else {\n                            high = mid;\n                        }\n                    }\n                    if (match) {\n                        if (wrapAtWord) {\n                            var wrapIndex;\n                            var nextChar = line[match.length];\n                            var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                                wrapIndex = match.length;\n                            }\n                            else {\n                                wrapIndex =\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                                        1;\n                            }\n                            if (wrapIndex > 0) {\n                                low = wrapIndex;\n                                match = match.slice(0, low);\n                                matchWidth = this._getTextWidth(match);\n                            }\n                        }\n                        match = match.trimRight();\n                        this._addTextLine(match);\n                        textWidth = Math.max(textWidth, matchWidth);\n                        currentHeightPx += lineHeightPx;\n                        if (!shouldWrap ||\n                            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\n                            var lastLine = this.textArr[this.textArr.length - 1];\n                            if (lastLine) {\n                                if (shouldAddEllipsis) {\n                                    var haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\n                                    if (!haveSpace) {\n                                        lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\n                                    }\n                                    this.textArr.splice(this.textArr.length - 1, 1);\n                                    this._addTextLine(lastLine.text + ELLIPSIS);\n                                }\n                            }\n                            break;\n                        }\n                        line = line.slice(low);\n                        line = line.trimLeft();\n                        if (line.length > 0) {\n                            lineWidth = this._getTextWidth(line);\n                            if (lineWidth <= maxWidth) {\n                                this._addTextLine(line);\n                                currentHeightPx += lineHeightPx;\n                                textWidth = Math.max(textWidth, lineWidth);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n            }\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                break;\n            }\n            if (this.textArr[this.textArr.length - 1]) {\n                this.textArr[this.textArr.length - 1].lastInParagraph = true;\n            }\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    }\n    getStrokeScaleEnabled() {\n        return true;\n    }\n}\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = [\n    'text',\n    'fontSize',\n    'padding',\n    'wrap',\n    'lineHeight',\n    'letterSpacing',\n];\n_registerNode(Text);\nFactory.overWriteSetter(Text, 'width', getNumberOrAutoValidator());\nFactory.overWriteSetter(Text, 'height', getNumberOrAutoValidator());\nFactory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory.addGetterSetter(Text, 'fontSize', 12, getNumberValidator());\nFactory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory.addGetterSetter(Text, 'padding', 0, getNumberValidator());\nFactory.addGetterSetter(Text, 'align', LEFT);\nFactory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory.addGetterSetter(Text, 'lineHeight', 1, getNumberValidator());\nFactory.addGetterSetter(Text, 'wrap', WORD);\nFactory.addGetterSetter(Text, 'ellipsis', false, getBooleanValidator());\nFactory.addGetterSetter(Text, 'letterSpacing', 0, getNumberValidator());\nFactory.addGetterSetter(Text, 'text', '', getStringValidator());\nFactory.addGetterSetter(Text, 'textDecoration', '');\n","import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Path } from './Path.js';\nimport { Text, stringToArray } from './Text.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar EMPTY_STRING = '', NORMAL = 'normal';\nfunction _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n}\nexport class TextPath extends Shape {\n    constructor(config) {\n        super(config);\n        this.dummyCanvas = Util.createCanvasElement();\n        this.dataArray = [];\n        this.dataArray = Path.parsePathData(this.attrs.data);\n        this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.attrs.data);\n            this._setTextData();\n        });\n        this.on('textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva', this._setTextData);\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', this.textBaseline());\n        context.setAttr('textAlign', 'left');\n        context.save();\n        var textDecoration = this.textDecoration();\n        var fill = this.fill();\n        var fontSize = this.fontSize();\n        var glyphInfo = this.glyphInfo;\n        if (textDecoration === 'underline') {\n            context.beginPath();\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            context.save();\n            var p0 = glyphInfo[i].p0;\n            context.translate(p0.x, p0.y);\n            context.rotate(glyphInfo[i].rotation);\n            this.partialText = glyphInfo[i].text;\n            context.fillStrokeShape(this);\n            if (textDecoration === 'underline') {\n                if (i === 0) {\n                    context.moveTo(0, fontSize / 2 + 1);\n                }\n                context.lineTo(fontSize, fontSize / 2 + 1);\n            }\n            context.restore();\n        }\n        if (textDecoration === 'underline') {\n            context.strokeStyle = fill;\n            context.lineWidth = fontSize / 20;\n            context.stroke();\n        }\n        context.restore();\n    }\n    _hitFunc(context) {\n        context.beginPath();\n        var glyphInfo = this.glyphInfo;\n        if (glyphInfo.length >= 1) {\n            var p0 = glyphInfo[0].p0;\n            context.moveTo(p0.x, p0.y);\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            var p1 = glyphInfo[i].p1;\n            context.lineTo(p1.x, p1.y);\n        }\n        context.setAttr('lineWidth', this.fontSize());\n        context.setAttr('strokeStyle', this.colorKey);\n        context.stroke();\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    setText(text) {\n        return Text.prototype.setText.call(this, text);\n    }\n    _getContextFont() {\n        return Text.prototype._getContextFont.call(this);\n    }\n    _getTextSize(text) {\n        var dummyCanvas = this.dummyCanvas;\n        var _context = dummyCanvas.getContext('2d');\n        _context.save();\n        _context.font = this._getContextFont();\n        var metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: parseInt(this.attrs.fontSize, 10),\n        };\n    }\n    _setTextData() {\n        var that = this;\n        var size = this._getTextSize(this.attrs.text);\n        var letterSpacing = this.letterSpacing();\n        var align = this.align();\n        var kerningFunc = this.kerningFunc();\n        this.textWidth = size.width;\n        this.textHeight = size.height;\n        var textFullWidth = Math.max(this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing, 0);\n        this.glyphInfo = [];\n        var fullPathWidth = 0;\n        for (var l = 0; l < that.dataArray.length; l++) {\n            if (that.dataArray[l].pathLength > 0) {\n                fullPathWidth += that.dataArray[l].pathLength;\n            }\n        }\n        var offset = 0;\n        if (align === 'center') {\n            offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n        }\n        if (align === 'right') {\n            offset = Math.max(0, fullPathWidth - textFullWidth);\n        }\n        var charArr = stringToArray(this.text());\n        var spacesNumber = this.text().split(' ').length - 1;\n        var p0, p1, pathCmd;\n        var pIndex = -1;\n        var currentT = 0;\n        var getNextPathSegment = function () {\n            currentT = 0;\n            var pathData = that.dataArray;\n            for (var j = pIndex + 1; j < pathData.length; j++) {\n                if (pathData[j].pathLength > 0) {\n                    pIndex = j;\n                    return pathData[j];\n                }\n                else if (pathData[j].command === 'M') {\n                    p0 = {\n                        x: pathData[j].points[0],\n                        y: pathData[j].points[1],\n                    };\n                }\n            }\n            return {};\n        };\n        var findSegmentToFitCharacter = function (c) {\n            var glyphWidth = that._getTextSize(c).width + letterSpacing;\n            if (c === ' ' && align === 'justify') {\n                glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n            }\n            var currLen = 0;\n            var attempts = 0;\n            p1 = undefined;\n            while (Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n                attempts < 20) {\n                attempts++;\n                var cumulativePathLength = currLen;\n                while (pathCmd === undefined) {\n                    pathCmd = getNextPathSegment();\n                    if (pathCmd &&\n                        cumulativePathLength + pathCmd.pathLength < glyphWidth) {\n                        cumulativePathLength += pathCmd.pathLength;\n                        pathCmd = undefined;\n                    }\n                }\n                if (pathCmd === {} || p0 === undefined) {\n                    return undefined;\n                }\n                var needNewSegment = false;\n                switch (pathCmd.command) {\n                    case 'L':\n                        if (Path.getLineLength(p0.x, p0.y, pathCmd.points[0], pathCmd.points[1]) > glyphWidth) {\n                            p1 = Path.getPointOnLine(glyphWidth, p0.x, p0.y, pathCmd.points[0], pathCmd.points[1], p0.x, p0.y);\n                        }\n                        else {\n                            pathCmd = undefined;\n                        }\n                        break;\n                    case 'A':\n                        var start = pathCmd.points[4];\n                        var dTheta = pathCmd.points[5];\n                        var end = pathCmd.points[4] + dTheta;\n                        if (currentT === 0) {\n                            currentT = start + 0.00000001;\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += ((Math.PI / 180.0) * dTheta) / Math.abs(dTheta);\n                        }\n                        else {\n                            currentT -= ((Math.PI / 360.0) * dTheta) / Math.abs(dTheta);\n                        }\n                        if ((dTheta < 0 && currentT < end) ||\n                            (dTheta >= 0 && currentT > end)) {\n                            currentT = end;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnEllipticalArc(pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], currentT, pathCmd.points[6]);\n                        break;\n                    case 'C':\n                        if (currentT === 0) {\n                            if (glyphWidth > pathCmd.pathLength) {\n                                currentT = 0.00000001;\n                            }\n                            else {\n                                currentT = glyphWidth / pathCmd.pathLength;\n                            }\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength / 2;\n                        }\n                        else {\n                            currentT = Math.max(currentT - (currLen - glyphWidth) / pathCmd.pathLength / 2, 0);\n                        }\n                        if (currentT > 1.0) {\n                            currentT = 1.0;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnCubicBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], pathCmd.points[4], pathCmd.points[5]);\n                        break;\n                    case 'Q':\n                        if (currentT === 0) {\n                            currentT = glyphWidth / pathCmd.pathLength;\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n                        }\n                        else {\n                            currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n                        }\n                        if (currentT > 1.0) {\n                            currentT = 1.0;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnQuadraticBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3]);\n                        break;\n                }\n                if (p1 !== undefined) {\n                    currLen = Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n                }\n                if (needNewSegment) {\n                    needNewSegment = false;\n                    pathCmd = undefined;\n                }\n            }\n        };\n        var testChar = 'C';\n        var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n        var lettersInOffset = offset / glyphWidth - 1;\n        for (var k = 0; k < lettersInOffset; k++) {\n            findSegmentToFitCharacter(testChar);\n            if (p0 === undefined || p1 === undefined) {\n                break;\n            }\n            p0 = p1;\n        }\n        for (var i = 0; i < charArr.length; i++) {\n            findSegmentToFitCharacter(charArr[i]);\n            if (p0 === undefined || p1 === undefined) {\n                break;\n            }\n            var width = Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n            var kern = 0;\n            if (kerningFunc) {\n                try {\n                    kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n                }\n                catch (e) {\n                    kern = 0;\n                }\n            }\n            p0.x += kern;\n            p1.x += kern;\n            this.textWidth += kern;\n            var midpoint = Path.getPointOnLine(kern + width / 2.0, p0.x, p0.y, p1.x, p1.y);\n            var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n            this.glyphInfo.push({\n                transposeX: midpoint.x,\n                transposeY: midpoint.y,\n                text: charArr[i],\n                rotation: rotation,\n                p0: p0,\n                p1: p1,\n            });\n            p0 = p1;\n        }\n    }\n    getSelfRect() {\n        if (!this.glyphInfo.length) {\n            return {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        var points = [];\n        this.glyphInfo.forEach(function (info) {\n            points.push(info.p0.x);\n            points.push(info.p0.y);\n            points.push(info.p1.x);\n            points.push(info.p1.y);\n        });\n        var minX = points[0] || 0;\n        var maxX = points[0] || 0;\n        var minY = points[1] || 0;\n        var maxY = points[1] || 0;\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        var fontSize = this.fontSize();\n        return {\n            x: minX - fontSize / 2,\n            y: minY - fontSize / 2,\n            width: maxX - minX + fontSize,\n            height: maxY - minY + fontSize,\n        };\n    }\n}\nTextPath.prototype._fillFunc = _fillFunc;\nTextPath.prototype._strokeFunc = _strokeFunc;\nTextPath.prototype._fillFuncHit = _fillFunc;\nTextPath.prototype._strokeFuncHit = _strokeFunc;\nTextPath.prototype.className = 'TextPath';\nTextPath.prototype._attrsAffectingSize = ['text', 'fontSize', 'data'];\n_registerNode(TextPath);\nFactory.addGetterSetter(TextPath, 'data');\nFactory.addGetterSetter(TextPath, 'fontFamily', 'Arial');\nFactory.addGetterSetter(TextPath, 'fontSize', 12, getNumberValidator());\nFactory.addGetterSetter(TextPath, 'fontStyle', NORMAL);\nFactory.addGetterSetter(TextPath, 'align', 'left');\nFactory.addGetterSetter(TextPath, 'letterSpacing', 0, getNumberValidator());\nFactory.addGetterSetter(TextPath, 'textBaseline', 'middle');\nFactory.addGetterSetter(TextPath, 'fontVariant', NORMAL);\nFactory.addGetterSetter(TextPath, 'text', EMPTY_STRING);\nFactory.addGetterSetter(TextPath, 'textDecoration', null);\nFactory.addGetterSetter(TextPath, 'kerningFunc', null);\n","import { Util, Transform } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Shape } from '../Shape.js';\nimport { Rect } from './Rect.js';\nimport { Group } from '../Group.js';\nimport { Konva } from '../Global.js';\nimport { getBooleanValidator, getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n];\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util.degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util._inRange(angle, 315 + 22.5, 360) || Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return Object.assign(Object.assign({}, shape), { rotation: shape.rotation + angleRad, x,\n        y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nexport class Transformer extends Group {\n    constructor(config) {\n        super(config);\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + 'Change.' + this._getEventNamespace())\n                .join(' ');\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne('.back')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off('.' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Transform();\n        tr.rotate(-Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    }\n    _createAnchor(name) {\n        var anchor = new Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', () => {\n            var rad = Konva.getAngle(this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on('mouseout', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = '');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on('dragmove', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mousemove', this._handleMouseMove);\n            window.addEventListener('touchmove', this._handleMouseMove);\n            window.addEventListener('mouseup', this._handleMouseUp, true);\n            window.addEventListener('touchend', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire('transformstart', { evt: e.evt, target });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('mousemove', this._handleMouseMove);\n                window.removeEventListener('touchmove', this._handleMouseMove);\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\n                window.removeEventListener('touchend', this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach((target) => {\n                    target._fire('transformend', { evt: e, target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const allowNegativeScale = this.flipEnabled();\n        var t = new Transform();\n        t.rotate(Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = '');\n        }\n        Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node.prototype.toObject.call(this);\n    }\n}\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n_registerNode(Transformer);\nFactory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory.addGetterSetter(Transformer, 'flipEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorSize', 10, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderDash');\nFactory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory.addGetterSetter(Transformer, 'padding', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'node');\nFactory.addGetterSetter(Transformer, 'nodes');\nFactory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Wedge extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.radius(), 0, Konva.getAngle(this.angle()), this.clockwise());\n        context.lineTo(0, 0);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nWedge.prototype.className = 'Wedge';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Wedge);\nFactory.addGetterSetter(Wedge, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'clockwise', false);\nFactory.backCompat(Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle',\n});\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\nvar mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259,\n];\nvar shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n];\nfunction filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data, width = imageData.width, height = imageData.height;\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n    var div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = mul_table[radius], shg_sum = shg_table[radius];\n    for (i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n        if (i === radiusPlus1) {\n            stackEnd = stack;\n        }\n    }\n    stack.next = stackStart;\n    yw = yi = 0;\n    for (y = 0; y < height; y++) {\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        for (i = 1; i < radiusPlus1; i++) {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n        }\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++) {\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa !== 0) {\n                pa = 255 / pa;\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n            r_in_sum += stackIn.r = pixels[p];\n            g_in_sum += stackIn.g = pixels[p + 1];\n            b_in_sum += stackIn.b = pixels[p + 2];\n            a_in_sum += stackIn.a = pixels[p + 3];\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += 4;\n        }\n        yw += width;\n    }\n    for (x = 0; x < width; x++) {\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        yp = width;\n        for (i = 1; i <= radius; i++) {\n            yi = (yp + x) << 2;\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n            if (i < heightMinus1) {\n                yp += width;\n            }\n        }\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++) {\n            p = yi << 2;\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa > 0) {\n                pa = 255 / pa;\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p =\n                (x +\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\n                    2;\n            r_sum += r_in_sum += stackIn.r = pixels[p];\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\nexport const Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n    if (radius > 0) {\n        filterGaussBlurRGBA(imageData, radius);\n    }\n};\nFactory.addGetterSetter(Node, 'blurRadius', 0, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nexport const Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nFactory.addGetterSetter(Node, 'enhance', 0, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2],\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexport const Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory.addGetterSetter(Node, 'threshold', 0, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Brighten = function (imageData) {\n    var brightness = this.brightness() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n    }\n};\nFactory.addGetterSetter(Node, 'brightness', 0, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Contrast = function (imageData) {\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\n    for (i = 0; i < nPixels; i += 4) {\n        red = data[i];\n        green = data[i + 1];\n        blue = data[i + 2];\n        red /= 255;\n        red -= 0.5;\n        red *= adjust;\n        red += 0.5;\n        red *= 255;\n        green /= 255;\n        green -= 0.5;\n        green *= adjust;\n        green += 0.5;\n        green *= 255;\n        blue /= 255;\n        blue -= 0.5;\n        blue *= adjust;\n        blue += 0.5;\n        blue *= 255;\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n        data[i] = red;\n        data[i + 1] = green;\n        data[i + 2] = blue;\n    }\n};\nFactory.addGetterSetter(Node, 'contrast', 0, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Util } from '../Util.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Emboss = function (imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                var grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nFactory.addGetterSetter(Node, 'embossStrength', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossWhiteLevel', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossDirection', 'top-left', null, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossBlend', false, null, Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nFactory.addGetterSetter(Node, 'hue', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'saturation', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'luminance', 0, getNumberValidator(), Factory.afterSetFilter);\nexport const HSL = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b + l;\n        data[i + 1] = gr * r + gg * g + gb * b + l;\n        data[i + 2] = br * r + bg * g + bb * b + l;\n        data[i + 3] = a;\n    }\n};\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const HSV = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b;\n        data[i + 1] = gr * r + gg * g + gb * b;\n        data[i + 2] = br * r + bg * g + bb * b;\n        data[i + 3] = a;\n    }\n};\nFactory.addGetterSetter(Node, 'hue', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'saturation', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'value', 0, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Util } from '../Util.js';\nimport { getNumberValidator } from '../Validators.js';\nvar ToPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta;\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\n    for (theta = 0; theta < tSize; theta += 1) {\n        sin = Math.sin(theta * conversion);\n        cos = Math.cos(theta * conversion);\n        for (radius = 0; radius < rSize; radius += 1) {\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\n            i = (y * xSize + x) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (theta + radius * xSize) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nvar FromPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\n    var x1, y1;\n    for (x = 0; x < xSize; x += 1) {\n        for (y = 0; y < ySize; y += 1) {\n            dx = x - xMid;\n            dy = y - yMid;\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\n            theta = (theta * tSize) / 360;\n            x1 = Math.floor(theta);\n            y1 = Math.floor(radius);\n            i = (y1 * xSize + x1) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (y * xSize + x) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nexport const Kaleidoscope = function (imageData) {\n    var xSize = imageData.width, ySize = imageData.height;\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\n    if (power < 1) {\n        return;\n    }\n    var tempCanvas = Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n        .getContext('2d')\n        .getImageData(0, 0, xSize, ySize);\n    ToPolar(imageData, scratchData, {\n        polarCenterX: xSize / 2,\n        polarCenterY: ySize / 2,\n    });\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n        minSectionSize = minSectionSize * 2;\n        power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n        xStart = sectionSize;\n        xEnd = 0;\n        xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n        for (x = xStart; x !== xEnd; x += xDelta) {\n            xoff = Math.round(x + offset) % xSize;\n            srcPos = (xSize * y + xoff) * 4;\n            r = scratchData.data[srcPos + 0];\n            g = scratchData.data[srcPos + 1];\n            b = scratchData.data[srcPos + 2];\n            a = scratchData.data[srcPos + 3];\n            dstPos = (xSize * y + x) * 4;\n            scratchData.data[dstPos + 0] = r;\n            scratchData.data[dstPos + 1] = g;\n            scratchData.data[dstPos + 2] = b;\n            scratchData.data[dstPos + 3] = a;\n        }\n    }\n    for (y = 0; y < ySize; y += 1) {\n        sectionSize = Math.floor(minSectionSize);\n        for (i = 0; i < power; i += 1) {\n            for (x = 0; x < sectionSize + 1; x += 1) {\n                srcPos = (xSize * y + x) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n            sectionSize *= 2;\n        }\n    }\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n};\nFactory.addGetterSetter(Node, 'kaleidoscopePower', 2, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'kaleidoscopeAngle', 0, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Noise = function (imageData) {\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\n    for (i = 0; i < nPixels; i += 4) {\n        data[i + 0] += half - 2 * half * Math.random();\n        data[i + 1] += half - 2 * half * Math.random();\n        data[i + 2] += half - 2 * half * Math.random();\n    }\n};\nFactory.addGetterSetter(Node, 'noise', 0.2, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Util } from '../Util.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Pixelate = function (imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        Util.error('pixelSize value can not be <= 0');\n        return;\n    }\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\n            red = 0;\n            green = 0;\n            blue = 0;\n            alpha = 0;\n            xBinStart = xBin * pixelSize;\n            xBinEnd = xBinStart + pixelSize;\n            yBinStart = yBin * pixelSize;\n            yBinEnd = yBinStart + pixelSize;\n            pixelsInBin = 0;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    red += data[i + 0];\n                    green += data[i + 1];\n                    blue += data[i + 2];\n                    alpha += data[i + 3];\n                    pixelsInBin += 1;\n                }\n            }\n            red = red / pixelsInBin;\n            green = green / pixelsInBin;\n            blue = blue / pixelsInBin;\n            alpha = alpha / pixelsInBin;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    data[i + 0] = red;\n                    data[i + 1] = green;\n                    data[i + 2] = blue;\n                    data[i + 3] = alpha;\n                }\n            }\n        }\n    }\n};\nFactory.addGetterSetter(Node, 'pixelSize', 8, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Posterize = function (imageData) {\n    var levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = Math.floor(data[i] / scale) * scale;\n    }\n};\nFactory.addGetterSetter(Node, 'levels', 0.5, getNumberValidator(), Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { RGBComponent } from '../Validators.js';\nexport const RGB = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nFactory.addGetterSetter(Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'blue', 0, RGBComponent, Factory.afterSetFilter);\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { RGBComponent } from '../Validators.js';\nexport const RGBA = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for (i = 0; i < nPixels; i += 4) {\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nFactory.addGetterSetter(Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'blue', 0, RGBComponent, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'alpha', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n","import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Threshold = function (imageData) {\n    var level = this.threshold() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = data[i] < level ? 0 : 255;\n    }\n};\nFactory.addGetterSetter(Node, 'threshold', 0.5, getNumberValidator(), Factory.afterSetFilter);\n","import { Konva as Core } from './_CoreInternals.js';\nimport { Arc } from './shapes/Arc.js';\nimport { Arrow } from './shapes/Arrow.js';\nimport { Circle } from './shapes/Circle.js';\nimport { Ellipse } from './shapes/Ellipse.js';\nimport { Image } from './shapes/Image.js';\nimport { Label, Tag } from './shapes/Label.js';\nimport { Line } from './shapes/Line.js';\nimport { Path } from './shapes/Path.js';\nimport { Rect } from './shapes/Rect.js';\nimport { RegularPolygon } from './shapes/RegularPolygon.js';\nimport { Ring } from './shapes/Ring.js';\nimport { Sprite } from './shapes/Sprite.js';\nimport { Star } from './shapes/Star.js';\nimport { Text } from './shapes/Text.js';\nimport { TextPath } from './shapes/TextPath.js';\nimport { Transformer } from './shapes/Transformer.js';\nimport { Wedge } from './shapes/Wedge.js';\nimport { Blur } from './filters/Blur.js';\nimport { Brighten } from './filters/Brighten.js';\nimport { Contrast } from './filters/Contrast.js';\nimport { Emboss } from './filters/Emboss.js';\nimport { Enhance } from './filters/Enhance.js';\nimport { Grayscale } from './filters/Grayscale.js';\nimport { HSL } from './filters/HSL.js';\nimport { HSV } from './filters/HSV.js';\nimport { Invert } from './filters/Invert.js';\nimport { Kaleidoscope } from './filters/Kaleidoscope.js';\nimport { Mask } from './filters/Mask.js';\nimport { Noise } from './filters/Noise.js';\nimport { Pixelate } from './filters/Pixelate.js';\nimport { Posterize } from './filters/Posterize.js';\nimport { RGB } from './filters/RGB.js';\nimport { RGBA } from './filters/RGBA.js';\nimport { Sepia } from './filters/Sepia.js';\nimport { Solarize } from './filters/Solarize.js';\nimport { Threshold } from './filters/Threshold.js';\nexport const Konva = Core.Util._assign(Core, {\n    Arc,\n    Arrow,\n    Circle,\n    Ellipse,\n    Image,\n    Label,\n    Tag,\n    Line,\n    Path,\n    Rect,\n    RegularPolygon,\n    Ring,\n    Sprite,\n    Star,\n    Text,\n    TextPath,\n    Transformer,\n    Wedge,\n    Filters: {\n        Blur,\n        Brighten,\n        Contrast,\n        Emboss,\n        Enhance,\n        Grayscale,\n        HSL,\n        HSV,\n        Invert,\n        Kaleidoscope,\n        Mask,\n        Noise,\n        Pixelate,\n        Posterize,\n        RGB,\n        RGBA,\n        Sepia,\n        Solarize,\n        Threshold,\n    },\n});\n","import { Konva } from './_FullInternals.js';\nexport default Konva;\n","export const Grayscale = function (imageData) {\n    var data = imageData.data, len = data.length, i, brightness;\n    for (i = 0; i < len; i += 4) {\n        brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n        data[i] = brightness;\n        data[i + 1] = brightness;\n        data[i + 2] = brightness;\n    }\n};\n","export const Invert = function (imageData) {\n    var data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n    }\n};\n","export const Sepia = function (imageData) {\n    var data = imageData.data, nPixels = data.length, i, r, g, b;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\n    }\n};\n","export const Solarize = function (imageData) {\n    var data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    do {\n        var offsetY = (y - 1) * w4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var r = data[offset];\n            var g = data[offset + 1];\n            var b = data[offset + 2];\n            if (r > 127) {\n                r = 255 - r;\n            }\n            if (g > 127) {\n                g = 255 - g;\n            }\n            if (b > 127) {\n                b = 255 - b;\n            }\n            data[offset] = r;\n            data[offset + 1] = g;\n            data[offset + 2] = b;\n        } while (--x);\n    } while (--y);\n};\n"],"names":["Arc","Shape","_sceneFunc","context","angle","this","clockwise","beginPath","arc","outerRadius","innerRadius","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","getSelfRect","boundLeftRatio","Math","cos","min","PI","boundTopRatio","sin","max","boundBottomRatio","boundLeft","boundTop","boundBottom","x","y","getControlPoints","x0","y0","x1","y1","x2","y2","t","d01","sqrt","pow","d12","fa","fb","expandPoints","p","tension","n","cp","len","length","allPoints","isNaN","push","prototype","_centroid","className","_attrsAffectingSize","Factory","F","Line","constructor","config","super","on","_clearCache","tp","points","closed","bezier","moveTo","getTensionPoints","quadraticCurveTo","bezierCurveTo","lineTo","strokeShape","_getCache","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","middle","concat","minX","maxX","minY","maxY","i","Path","dataArray","pathLength","parsePathData","data","ca","isClosed","c","command","cx","cy","rx","ry","theta","dTheta","psi","fs","r","scaleX","scaleY","translate","rotate","scale","hasFill","forEach","start","end","inc","abs","point","getPointOnEllipticalArc","getPointOnCubicBezier","getLength","getPointAtLength","ii","slice","getPointOnLine","getPointOnQuadraticBezier","static","dist","P1x","P1y","P2x","P2y","fromX","fromY","undefined","m","run","pt","rise","ix","iy","getLineLength","u","pRise","pRun","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","QB1","QB2","QB3","cosPsi","sinPsi","cs","cc","replace","RegExp","match","arr","split","coords","cpx","cpy","re","str","charAt","exec","j","jlen","parsed","parseFloat","prevCmd","ctlPtx","ctlPty","cmd","startX","startY","shift","dx","dy","idx","convertEndpointToCenterParameterization","calcLength","p1","p2","path","psiDeg","xp","yp","lambda","f","cxp","cyp","vMag","v","vRatio","vAngle","acos","Arrow","ctx","PI2","fromTension","pointerLength","lp","lastLength","previous","radians","atan2","pointerWidth","pointerAtEnding","save","restore","__fillStroke","pointerAtBeginning","isDashEnabled","dashEnabled","attrs","setLineDash","lineRect","offset","Circle","radius","Ellipse","radiusX","radiusY","Image","_setImageLoad","image","complete","readyState","_requestDraw","_useBufferCanvas","params","cropWidth","cropHeight","cropX","cropY","hasStroke","rect","drawImage","apply","_hitFunc","_a","_b","url","callback","onError","img","Util","onload","onerror","crossOrigin","src","ATTR_CHANGE_LIST","UP","RIGHT","DOWN","LEFT","attrChangeListLen","Label","Group","evt","_addListeners","child","_sync","getText","find","getTag","text","that","func","pointerDirection","pointerHeight","tag","setAttrs","Tag","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","direction","Rect","RegularPolygon","_getPoints","sides","PIx2","Ring","Sprite","_updated","anim","Animation","updated","frameIndex","isRunning","clearInterval","interval","_setInterval","animation","index","ix4","set","animations","offsets","frameOffsets","ix2","fillShape","setInterval","_updateIndex","frameRate","layer","getLayer","setLayers","stop","getIndex","setIndex","Star","numPoints","stringToArray","string","Array","from","dummyContext","AUTO","JUSTIFY","MIDDLE","NORMAL","SPACE","getDummyContext","getContext","Text","fillLinearGradientColorStops","fillRadialGradientColorStops","fillPatternImage","fill","checkDefaultFill","_partialTextX","_partialTextY","_setTextData","textArr","textArrLen","padding","fontSize","lineHeightPx","lineHeight","verticalAlign","alignY","align","totalWidth","letterSpacing","textDecoration","shouldUnderline","indexOf","shouldLineThrough","translateY","lineTranslateX","lineTranslateY","setAttr","_getContextFont","spacesNumber","oneWord","lineWidth","obj","lastLine","lastInParagraph","round","strokeStyle","stroke","array","li","letter","_partialText","measureSize","setText","_setAttr","getTextWidth","textWidth","getTextHeight","textHeight","metrics","_context","font","measureText","fontStyle","fontVariant","fontFamily","map","family","hasSpace","trim","hasQuotes","join","_addTextLine","line","_getTextWidth","lines","fixedWidth","fixedHeight","maxWidth","maxHeightPx","currentHeightPx","wrap","shouldWrap","wrapAtWord","shouldAddEllipsis","ellipsis","additionalWidth","low","high","matchWidth","mid","substr","substrWidth","wrapIndex","nextChar","lastIndexOf","trimRight","splice","trimLeft","getStrokeScaleEnabled","_fillFunc","fillText","_strokeFunc","strokeText","partialText","TextPath","dummyCanvas","textBaseline","glyphInfo","p0","rotation","colorKey","call","_getTextSize","parseInt","size","kerningFunc","textFullWidth","fullPathWidth","l","pathCmd","charArr","pIndex","currentT","getNextPathSegment","pathData","findSegmentToFitCharacter","glyphWidth","currLen","attempts","cumulativePathLength","needNewSegment","lettersInOffset","k","kern","e","midpoint","transposeX","transposeY","info","_fillFuncHit","_strokeFuncHit","EVENTS_NAME","NODES_RECT","TRANSFORM_CHANGE_STR","ANGLES","TOUCH_DEVICE","ANCHORS_NAMES","rotateAroundPoint","shape","angleRad","Object","assign","Transformer","_transforming","_createElements","_handleMouseMove","bind","_handleMouseUp","update","getNode","attachTo","node","setNode","setNodes","_nodes","_getEventNamespace","_id","nodes","detach","useSingleNodeRotation","getAbsoluteRotation","onChange","_resetTransformCache","isDragging","additionalEvents","prop","_proxyDrag","findOne","lastPos","getAbsolutePosition","startDrag","otherNode","otherAbs","setAbsolutePosition","getNodes","getActiveAnchor","_movingAnchorName","off","_clearSelfAndDescendantCache","_getNodeRect","__getNodeRect","__getNodeShape","rot","relative","getClientRect","skipTransform","skipShadow","skipStroke","ignoreStroke","absScale","getAbsoluteScale","absPos","offsetX","offsetY","totalPoints","box","trans","getAbsoluteTransform","transformed","tr","invert","getX","getY","_createBack","name","_createAnchor","anchor","strokeWidth","dragDistance","draggable","hitStrokeWidth","self","_handleMouseDown","stopDrag","cancelBubble","rad","cursor","anchorName","getCursor","getStage","content","style","_cursorChange","add","back","sceneFunc","getParent","rotateEnabled","rotateAnchorOffset","hitFunc","shouldOverdrawWholeArea","target","hypotenuse","window","addEventListener","ap","pos","getPointerPosition","_anchorDragOffset","_fire","newHypotenuse","anchorNode","stage","setPointersPositions","pp","newNodePos","oldAbs","anchorDragBoundFunc","newAbs","keepProportion","keepRatio","shiftKey","centeredScaling","altKey","comparePoint","reverseX","reverseY","position","console","error","Error","topOffsetX","topOffsetY","bottomOffsetX","bottomOffsetY","move","_fitNodesInto","delta","newRotation","tol","rotationSnapTolerance","deltaRad","center","getCenter","rotateAroundCenter","snaps","newRotationRad","snapped","absDiff","getSnap","rotationSnaps","_removeEvents","getTransform","removeEventListener","newAttrs","oldAttrs","allowNegativeScale","flipEnabled","boundBoxFunc","bounded","baseSize","oldTr","newTr","multiply","parentTransform","localTransform","copy","newLocalTransform","decompose","batchDraw","forceUpdate","_batchChangeChild","selector","enabledAnchors","resizeEnabled","anchorSize","anchorStroke","anchorStrokeWidth","anchorFill","anchorCornerRadius","visible","borderEnabled","borderStroke","borderStrokeWidth","dash","borderDash","isTransforming","stopTransform","destroy","toObject","Node","N","val","lineEnabled","rotateHandlerOffset","enabledHandlers","Wedge","BlurStack","g","b","a","next","angleDeg","getAngleDeg","setAngleDeg","mul_table","shg_table","remap","fromValue","fromMin","fromMax","toMin","toMax","fromRange","toRange","pixelAt","idata","d","rgbDistance","_filterUpToDate","Filters","Blur","imageData","blurRadius","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pr","pg","pb","pa","rbs","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","stackEnd","stack","stackIn","stackOut","mul_sum","shg_sum","filterGaussBlurRGBA","Brighten","brightness","Contrast","adjust","contrast","nPixels","red","green","blue","Emboss","strength","embossStrength","greyLevel","embossWhiteLevel","embossDirection","blend","embossBlend","dirY","dirX","w","h","w4","otherY","offsetYOther","otherX","offsetOther","dR","dG","dB","dif","absDif","grey","Enhance","nSubPixels","rMin","rMax","gMin","gMax","bMin","bMax","enhanceAmount","enhance","rMid","rGoalMax","rGoalMin","gMid","gGoalMax","gGoalMin","bMid","bGoalMax","bGoalMin","Grayscale","HSL","s","saturation","hue","luminance","vsu","vsw","rr","rg","rb","gr","gg","gb","br","bg","bb","HSV","value","Invert","Kaleidoscope","srcPos","dstPos","xSize","ySize","power","kaleidoscopePower","kaleidoscopeAngle","floor","tempCanvas","scratchData","getImageData","dst","opt","srcPixels","dstPixels","xMid","polarCenterX","yMid","polarCenterY","rSize","tSize","conversion","ToPolar","minSectionSize","sectionSize","ceil","xStart","xEnd","xDelta","phaseShift","polarRotation","FromPolar","Mask","mask","threshold","rgbv_no","rgbv_ne","rgbv_so","rgbv_se","thres","mean","pTab","rgbMean","backgroundMask","applyMask","sw","sh","weights","side","halfSide","maskResult","so","scy","scx","wt","smoothEdgeMask","dilateMask","erodeMask","Noise","amount","noise","half","random","Pixelate","alpha","xBinStart","xBinEnd","yBinStart","yBinEnd","xBin","yBin","pixelsInBin","pixelSize","nBinsX","nBinsY","Posterize","levels","RGB","RGBA","ia","Sepia","Solarize","Threshold","level"],"sourceRoot":""}